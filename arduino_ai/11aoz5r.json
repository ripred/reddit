{
  "approved_at_utc": null,
  "subreddit": "Arduino_AI",
  "selftext": "\"Write an arduino program that plays a numbers guessing game. There should be 10 functions and no function should be more than 8 lines long. All of the functions should be called at least once from somewhere in the program. All of the function and variable names should be quotes or characters from the movie 'Finding Nemo'\".\n\n    /***\n     * Generated by chatGPT using the following prompt:\n     * \n     * Write an arduino program that plays a numbers guessing game. There should be 10 functions and no function should be more than 8 lines long. \n     * All of the functions should be called at least once from somewhere in the program. All of the function and variable names should be quotes\n     * or characters from the movie \"Finding Nemo\".\n     *\n     * https://wokwi.com/projects/357541331693080577\n     *\n     * https://www.reddit.com/r/Arduino_AI/comments/11aoz5r/finding_nemos_number_see_it_run_on_wokwi_right_now/?utm_source=share&amp;utm_medium=web2x&amp;context=3\n     *\n     * ++ripred Feb 24, 2023 \n     */\n    \n    int nemo_number; // global variable to hold the secret number\n    int touch_the_butt; // global variable to hold the number of guesses\n    \n    // function to turn on an LED\n    void bloat_on(int pin) {\n      digitalWrite(pin, HIGH); // turn the LED on\n    }\n    \n    // function to turn off an LED\n    void nigel_off(int pin) {\n      digitalWrite(pin, LOW); // turn the LED off\n    }\n    \n    // function to blink an LED\n    void gill_blink(int pin) {\n      bloat_on(pin); // turn the LED on\n      delay(500); // wait for half a second\n      nigel_off(pin); // turn the LED off\n      delay(500); // wait for half a second\n    }\n    \n    // function to flash an LED\n    void peach_flash(int pin) {\n      bloat_on(pin); // turn the LED on\n      delay(100); // wait for a tenth of a second\n      nigel_off(pin); // turn the LED off\n      delay(100); // wait for a tenth of a second\n    }\n    \n    // function to fade an LED\n    void squirt_fade(int pin) {\n      for (int i = 0; i &lt;= 255; i++) { // loop from 0 to 255\n        analogWrite(pin, i); // set the LED brightness\n        delay(10); // wait for a tenth of a second\n      }\n      for (int i = 255; i &gt;= 0; i--) { // loop from 255 to 0\n        analogWrite(pin, i); // set the LED brightness\n        delay(10); // wait for a tenth of a second\n      }\n    }\n    \n    // function to initialize the game\n    void marlin_init() {\n      randomSeed(analogRead(0)); // seed the random number generator\n      nemo_number = random(1, 101); // choose a random number between 1 and 100\n      touch_the_butt = 0; // reset the guess counter\n    }\n    \n    // function to prompt the user for a guess\n    int dory_guess() {\n      touch_the_butt++; // increase the guess counter\n      Serial.print(\"Guess number \"); // prompt the user\n      Serial.print(touch_the_butt, DEC); // display the guess number\n      Serial.println(\": What's your guess, Dory?\"); // prompt the user\n      int guess = 0; // variable for user input\n      while (guess == 0) {\n        while (Serial.available() &lt; 2); // wait for input\n        guess = Serial.parseInt(); // read the user's guess\n        delay(250); // delay for last received bytes\n        while (Serial.available()) Serial.read();\n      }\n      return guess; // return the guess to the calling function\n    }\n    \n    // function to check the user's guess\n    void nemo_check(int guess) {\n      if (guess &lt; nemo_number) {\n        Serial.print(guess, DEC);\n        Serial.println(\" is too low, Dory!\"); // print a hint if the guess is too low\n        gill_blink(2);\n      } else if (guess &gt; nemo_number) {\n        Serial.print(guess, DEC);\n        Serial.println(\" is too high, Dory!\"); // print a hint if the guess is too high\n        peach_flash(3);\n      } else {\n        Serial.println(\"You got it, Dory!\"); // print a congratulatory message if the guess is correct\n        squirt_fade(5);\n     }\n    }\n    \n    // function to play the game\n    void bruce_play() {\n      Serial.println(); // print a blank line\n      Serial.println(\"Hi Dory. This is Nemo. I am thinking of a number between 1 and 100!\"); // print the rules for a new game\n      marlin_init(); // initialize the game\n      int guess = 0; // initialize the user's guess\n      while (guess != nemo_number) { // loop until the user guesses the number\n        guess = dory_guess(); // prompt the user for a guess\n        nemo_check(guess); // check the user's guess\n      }\n    }\n    \n    // function to setup the Arduino\n    void setup() {\n      Serial.begin(115200); // initialize the serial port\n      pinMode(2, OUTPUT); // initialize the LED pins\n      pinMode(3, OUTPUT);\n      pinMode(5, OUTPUT);\n    }\n    \n    // main program loop\n    void loop() {\n      bruce_play(); // play the game\n    }\n\n[Here's the game on wokwi.com that you can run and edit live right now](https://wokwi.com/projects/357541331693080577).\n\nHave fun,\n\n`ripred`",
  "author_fullname": "t2_adfkq",
  "saved": false,
  "mod_reason_title": null,
  "gilded": 0,
  "clicked": false,
  "title": "Finding Nemo's Number - See it Run on Wokwi right now",
  "link_flair_richtext": [
    {
      "a": ":snoo_dealwithit:",
      "e": "emoji",
      "u": "https://emoji.redditmedia.com/94ntcn2taezz_t5_3nqvj/snoo_dealwithit"
    },
    {
      "e": "text",
      "t": " Look What I Made!"
    }
  ],
  "subreddit_name_prefixed": "r/Arduino_AI",
  "hidden": false,
  "pwls": null,
  "link_flair_css_class": "",
  "downs": 0,
  "thumbnail_height": null,
  "top_awarded_type": null,
  "hide_score": false,
  "name": "t3_11aoz5r",
  "quarantine": false,
  "link_flair_text_color": "light",
  "upvote_ratio": 1.0,
  "author_flair_background_color": null,
  "subreddit_type": "public",
  "ups": 3,
  "total_awards_received": 0,
  "media_embed": {},
  "thumbnail_width": null,
  "author_flair_template_id": null,
  "is_original_content": false,
  "user_reports": [],
  "secure_media": null,
  "is_reddit_media_domain": false,
  "is_meta": false,
  "category": null,
  "secure_media_embed": {},
  "link_flair_text": ":snoo_dealwithit: Look What I Made!",
  "can_mod_post": false,
  "score": 3,
  "approved_by": null,
  "is_created_from_ads_ui": false,
  "author_premium": false,
  "thumbnail": "self",
  "edited": 1677240433.0,
  "author_flair_css_class": null,
  "author_flair_richtext": [],
  "gildings": {},
  "post_hint": "self",
  "content_categories": null,
  "is_self": true,
  "mod_note": null,
  "created": 1677237236.0,
  "link_flair_type": "richtext",
  "wls": null,
  "removed_by_category": null,
  "banned_by": null,
  "author_flair_type": "text",
  "domain": "self.Arduino_AI",
  "allow_live_comments": false,
  "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;&amp;quot;Write an arduino program that plays a numbers guessing game. There should be 10 functions and no function should be more than 8 lines long. All of the functions should be called at least once from somewhere in the program. All of the function and variable names should be quotes or characters from the movie &amp;#39;Finding Nemo&amp;#39;&amp;quot;.&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;/***\n * Generated by chatGPT using the following prompt:\n * \n * Write an arduino program that plays a numbers guessing game. There should be 10 functions and no function should be more than 8 lines long. \n * All of the functions should be called at least once from somewhere in the program. All of the function and variable names should be quotes\n * or characters from the movie &amp;quot;Finding Nemo&amp;quot;.\n *\n * https://wokwi.com/projects/357541331693080577\n *\n * https://www.reddit.com/r/Arduino_AI/comments/11aoz5r/finding_nemos_number_see_it_run_on_wokwi_right_now/?utm_source=share&amp;amp;utm_medium=web2x&amp;amp;context=3\n *\n * ++ripred Feb 24, 2023 \n */\n\nint nemo_number; // global variable to hold the secret number\nint touch_the_butt; // global variable to hold the number of guesses\n\n// function to turn on an LED\nvoid bloat_on(int pin) {\n  digitalWrite(pin, HIGH); // turn the LED on\n}\n\n// function to turn off an LED\nvoid nigel_off(int pin) {\n  digitalWrite(pin, LOW); // turn the LED off\n}\n\n// function to blink an LED\nvoid gill_blink(int pin) {\n  bloat_on(pin); // turn the LED on\n  delay(500); // wait for half a second\n  nigel_off(pin); // turn the LED off\n  delay(500); // wait for half a second\n}\n\n// function to flash an LED\nvoid peach_flash(int pin) {\n  bloat_on(pin); // turn the LED on\n  delay(100); // wait for a tenth of a second\n  nigel_off(pin); // turn the LED off\n  delay(100); // wait for a tenth of a second\n}\n\n// function to fade an LED\nvoid squirt_fade(int pin) {\n  for (int i = 0; i &amp;lt;= 255; i++) { // loop from 0 to 255\n    analogWrite(pin, i); // set the LED brightness\n    delay(10); // wait for a tenth of a second\n  }\n  for (int i = 255; i &amp;gt;= 0; i--) { // loop from 255 to 0\n    analogWrite(pin, i); // set the LED brightness\n    delay(10); // wait for a tenth of a second\n  }\n}\n\n// function to initialize the game\nvoid marlin_init() {\n  randomSeed(analogRead(0)); // seed the random number generator\n  nemo_number = random(1, 101); // choose a random number between 1 and 100\n  touch_the_butt = 0; // reset the guess counter\n}\n\n// function to prompt the user for a guess\nint dory_guess() {\n  touch_the_butt++; // increase the guess counter\n  Serial.print(&amp;quot;Guess number &amp;quot;); // prompt the user\n  Serial.print(touch_the_butt, DEC); // display the guess number\n  Serial.println(&amp;quot;: What&amp;#39;s your guess, Dory?&amp;quot;); // prompt the user\n  int guess = 0; // variable for user input\n  while (guess == 0) {\n    while (Serial.available() &amp;lt; 2); // wait for input\n    guess = Serial.parseInt(); // read the user&amp;#39;s guess\n    delay(250); // delay for last received bytes\n    while (Serial.available()) Serial.read();\n  }\n  return guess; // return the guess to the calling function\n}\n\n// function to check the user&amp;#39;s guess\nvoid nemo_check(int guess) {\n  if (guess &amp;lt; nemo_number) {\n    Serial.print(guess, DEC);\n    Serial.println(&amp;quot; is too low, Dory!&amp;quot;); // print a hint if the guess is too low\n    gill_blink(2);\n  } else if (guess &amp;gt; nemo_number) {\n    Serial.print(guess, DEC);\n    Serial.println(&amp;quot; is too high, Dory!&amp;quot;); // print a hint if the guess is too high\n    peach_flash(3);\n  } else {\n    Serial.println(&amp;quot;You got it, Dory!&amp;quot;); // print a congratulatory message if the guess is correct\n    squirt_fade(5);\n }\n}\n\n// function to play the game\nvoid bruce_play() {\n  Serial.println(); // print a blank line\n  Serial.println(&amp;quot;Hi Dory. This is Nemo. I am thinking of a number between 1 and 100!&amp;quot;); // print the rules for a new game\n  marlin_init(); // initialize the game\n  int guess = 0; // initialize the user&amp;#39;s guess\n  while (guess != nemo_number) { // loop until the user guesses the number\n    guess = dory_guess(); // prompt the user for a guess\n    nemo_check(guess); // check the user&amp;#39;s guess\n  }\n}\n\n// function to setup the Arduino\nvoid setup() {\n  Serial.begin(115200); // initialize the serial port\n  pinMode(2, OUTPUT); // initialize the LED pins\n  pinMode(3, OUTPUT);\n  pinMode(5, OUTPUT);\n}\n\n// main program loop\nvoid loop() {\n  bruce_play(); // play the game\n}\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;&lt;a href=\"https://wokwi.com/projects/357541331693080577\"&gt;Here&amp;#39;s the game on wokwi.com that you can run and edit live right now&lt;/a&gt;.&lt;/p&gt;\n\n&lt;p&gt;Have fun,&lt;/p&gt;\n\n&lt;p&gt;&lt;code&gt;ripred&lt;/code&gt;&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;",
  "likes": null,
  "suggested_sort": null,
  "banned_at_utc": null,
  "view_count": null,
  "archived": false,
  "no_follow": false,
  "is_crosspostable": false,
  "pinned": false,
  "over_18": false,
  "preview": {
    "images": [
      {
        "source": {
          "url": "https://external-preview.redd.it/0BvYin6JaPWfYA2p4Ymmf1Pnp_bLY3nU6wbrsn_NIRg.jpg?auto=webp&amp;s=f1d56c7628b8a3bfd78b89feb496ed5ddca20818",
          "width": 1200,
          "height": 630
        },
        "resolutions": [
          {
            "url": "https://external-preview.redd.it/0BvYin6JaPWfYA2p4Ymmf1Pnp_bLY3nU6wbrsn_NIRg.jpg?width=108&amp;crop=smart&amp;auto=webp&amp;s=1e8099ad76051d2c8e21a83abcac00de98f0a5b1",
            "width": 108,
            "height": 56
          },
          {
            "url": "https://external-preview.redd.it/0BvYin6JaPWfYA2p4Ymmf1Pnp_bLY3nU6wbrsn_NIRg.jpg?width=216&amp;crop=smart&amp;auto=webp&amp;s=8fbc421d6773a3938b691549ba020fcac3b9507c",
            "width": 216,
            "height": 113
          },
          {
            "url": "https://external-preview.redd.it/0BvYin6JaPWfYA2p4Ymmf1Pnp_bLY3nU6wbrsn_NIRg.jpg?width=320&amp;crop=smart&amp;auto=webp&amp;s=7955ff7ece47fdb6dce241365929c8001b911421",
            "width": 320,
            "height": 168
          },
          {
            "url": "https://external-preview.redd.it/0BvYin6JaPWfYA2p4Ymmf1Pnp_bLY3nU6wbrsn_NIRg.jpg?width=640&amp;crop=smart&amp;auto=webp&amp;s=0e49e35fc30549ee17e955d7cedd8de4e3da59fe",
            "width": 640,
            "height": 336
          },
          {
            "url": "https://external-preview.redd.it/0BvYin6JaPWfYA2p4Ymmf1Pnp_bLY3nU6wbrsn_NIRg.jpg?width=960&amp;crop=smart&amp;auto=webp&amp;s=83b9a87e7ac5d32eed70903fdc5da85c95136fab",
            "width": 960,
            "height": 504
          },
          {
            "url": "https://external-preview.redd.it/0BvYin6JaPWfYA2p4Ymmf1Pnp_bLY3nU6wbrsn_NIRg.jpg?width=1080&amp;crop=smart&amp;auto=webp&amp;s=bf3ea8ed685026f8896897f68467840ef98b4342",
            "width": 1080,
            "height": 567
          }
        ],
        "variants": {},
        "id": "BNx5NI6ILmvzh0_aCVjfV4dBxGxloBFKHeD-7_gai9I"
      }
    ],
    "enabled": false
  },
  "all_awardings": [],
  "awarders": [],
  "media_only": false,
  "link_flair_template_id": "c91f3d7e-b3d1-11ed-b3d6-0aa9a4cc52be",
  "can_gild": false,
  "spoiler": false,
  "locked": false,
  "author_flair_text": null,
  "treatment_tags": [],
  "visited": false,
  "removed_by": null,
  "num_reports": null,
  "distinguished": null,
  "subreddit_id": "t5_7yd5re",
  "author_is_blocked": false,
  "mod_reason_by": null,
  "removal_reason": null,
  "link_flair_background_color": "#014980",
  "id": "11aoz5r",
  "is_robot_indexable": true,
  "report_reasons": null,
  "author": "ripred3",
  "discussion_type": null,
  "num_comments": 0,
  "send_replies": true,
  "contest_mode": false,
  "mod_reports": [],
  "author_patreon_flair": false,
  "author_flair_text_color": null,
  "permalink": "/r/Arduino_AI/comments/11aoz5r/finding_nemos_number_see_it_run_on_wokwi_right_now/",
  "stickied": false,
  "url": "https://www.reddit.com/r/Arduino_AI/comments/11aoz5r/finding_nemos_number_see_it_run_on_wokwi_right_now/",
  "subreddit_subscribers": 3135,
  "created_utc": 1677237236.0,
  "num_crossposts": 1,
  "media": null,
  "is_video": false
}