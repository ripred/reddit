{
  "approved_at_utc": null,
  "subreddit": "Arduino_AI",
  "selftext": "**GptDuino.py**\n\n    # GptDuino.py\n    # 2023 ripred\n    \n    import openai\n    import serial\n    import os\n    \n    def getGptResponse(text):\n        response = openai.Completion.create(\n            model=\"text-davinci-003\",\n            prompt=text,\n            temperature=0.6)\n        return response.choices[0].text\n    \n    if __name__ == '__main__':\n        openai.api_key = os.getenv(\"OPENAI_API_KEY\")\n    \n        serialInst = serial.Serial()\n        serialInst.baudrate = 115200\n        serialInst.port = '/dev/cu.usbserial-4110'\n        serialInst.open()\n    \n        while True:\n            if serialInst.in_waiting:\n                prompt = serialInst.readline().decode('utf')\n                print(prompt)\n                response = getGptResponse(prompt)\n                print('\\n')\n                print(response)\n                serialInst.write(response.encode('utf'))\n\n**GptDuino.ino**\n\n    /**\n     * GptDuino.ino\n     * \n     * Demo of an Arduino Nano sending a prompt to chatgpt \n     * over the Serial port and controlling a servo with\n     * the responses.\n     * \n     */\n    #include &lt;Arduino.h&gt;\n    #include &lt;Servo.h&gt;\n    \n    enum { ServoPin = 6 };\n    \n    uint32_t last;\n    Servo servo;\n    \n    char const * const prompt = \n        \"You are a controller of a servo connected to an Arduino Nano \"\n        \"based on your responses. Only respond with numbers between 20 \"\n        \"and 160 to randomly move the servo position. \"\n        \"Only send one servo position in decimal per line. \"\n        \"Send 5 positions in total\\n\";\n    \n    void setup() {\n        Serial.begin(115200);\n        servo.attach(ServoPin);\n    \n        last = millis();\n    }\n    \n    void loop() {\n        if (Serial.available()) {\n            last = millis();\n            servo.write(Serial.parseInt());\n            delay(1000);\n        }\n    \n        if (millis() - last &gt;= 10000) {\n            Serial.print(prompt);\n            last = millis();\n        }\n    }\n\n[An Arduino Nano sending a prompt to ChatGPT via a Python agent running on the PC that uses the openAI Python api to send chat prompts to ChatGPT and then write the response bytes back to the Arduino \ud83e\udd16](https://reddit.com/link/1249bxc/video/0sx9zwxv1eqa1/player)\n\nCheers!\n\n`ripred`",
  "author_fullname": "t2_adfkq",
  "saved": false,
  "mod_reason_title": null,
  "gilded": 0,
  "clicked": false,
  "title": "GptDuino - Arduino Nano Controlling ChatGPT",
  "link_flair_richtext": [
    {
      "a": ":illuminati:",
      "e": "emoji",
      "u": "https://emoji.redditmedia.com/mv60bklq1guz_t5_3nqvj/illuminati"
    },
    {
      "e": "text",
      "t": " openAI api"
    }
  ],
  "subreddit_name_prefixed": "r/Arduino_AI",
  "hidden": false,
  "pwls": null,
  "link_flair_css_class": "",
  "downs": 0,
  "thumbnail_height": null,
  "top_awarded_type": null,
  "hide_score": false,
  "media_metadata": {
    "0sx9zwxv1eqa1": {
      "status": "valid",
      "e": "RedditVideo",
      "dashUrl": "https://v.redd.it/link/1249bxc/asset/0sx9zwxv1eqa1/DASHPlaylist.mpd?a=1741710015%2CNDYwN2UwZjMzYTNiYTU4YzgwOGQ4MGJlODg1MTM2ZmUxYmZjZTMwNjQyZTk4MWJmNmViNDRiMzE0ZmQwZjg2MQ%3D%3D&amp;v=1&amp;f=sd",
      "x": 1920,
      "y": 1080,
      "hlsUrl": "https://v.redd.it/link/1249bxc/asset/0sx9zwxv1eqa1/HLSPlaylist.m3u8?a=1741710015%2CMmUyYWQxM2QxZWM1ZDc0MzE4YjViYjI0ZjYxNjcyOGM2OTQ2NDE1NDVhZTRlOGQ0OTYyNGE2MjllZDg4MjVkNg%3D%3D&amp;v=1&amp;f=sd",
      "id": "0sx9zwxv1eqa1",
      "isGif": false
    }
  },
  "name": "t3_1249bxc",
  "quarantine": false,
  "link_flair_text_color": "light",
  "upvote_ratio": 1.0,
  "author_flair_background_color": null,
  "subreddit_type": "public",
  "ups": 11,
  "total_awards_received": 0,
  "media_embed": {},
  "thumbnail_width": null,
  "author_flair_template_id": null,
  "is_original_content": false,
  "user_reports": [],
  "secure_media": null,
  "is_reddit_media_domain": false,
  "is_meta": false,
  "category": null,
  "secure_media_embed": {},
  "link_flair_text": ":illuminati: openAI api",
  "can_mod_post": false,
  "score": 11,
  "approved_by": null,
  "is_created_from_ads_ui": false,
  "author_premium": false,
  "thumbnail": "self",
  "edited": 1679970601.0,
  "author_flair_css_class": null,
  "author_flair_richtext": [],
  "gildings": {},
  "content_categories": null,
  "is_self": true,
  "mod_note": null,
  "created": 1679969605.0,
  "link_flair_type": "richtext",
  "wls": null,
  "removed_by_category": null,
  "banned_by": null,
  "author_flair_type": "text",
  "domain": "self.Arduino_AI",
  "allow_live_comments": false,
  "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;&lt;strong&gt;GptDuino.py&lt;/strong&gt;&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;# GptDuino.py\n# 2023 ripred\n\nimport openai\nimport serial\nimport os\n\ndef getGptResponse(text):\n    response = openai.Completion.create(\n        model=&amp;quot;text-davinci-003&amp;quot;,\n        prompt=text,\n        temperature=0.6)\n    return response.choices[0].text\n\nif __name__ == &amp;#39;__main__&amp;#39;:\n    openai.api_key = os.getenv(&amp;quot;OPENAI_API_KEY&amp;quot;)\n\n    serialInst = serial.Serial()\n    serialInst.baudrate = 115200\n    serialInst.port = &amp;#39;/dev/cu.usbserial-4110&amp;#39;\n    serialInst.open()\n\n    while True:\n        if serialInst.in_waiting:\n            prompt = serialInst.readline().decode(&amp;#39;utf&amp;#39;)\n            print(prompt)\n            response = getGptResponse(prompt)\n            print(&amp;#39;\\n&amp;#39;)\n            print(response)\n            serialInst.write(response.encode(&amp;#39;utf&amp;#39;))\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;&lt;strong&gt;GptDuino.ino&lt;/strong&gt;&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;/**\n * GptDuino.ino\n * \n * Demo of an Arduino Nano sending a prompt to chatgpt \n * over the Serial port and controlling a servo with\n * the responses.\n * \n */\n#include &amp;lt;Arduino.h&amp;gt;\n#include &amp;lt;Servo.h&amp;gt;\n\nenum { ServoPin = 6 };\n\nuint32_t last;\nServo servo;\n\nchar const * const prompt = \n    &amp;quot;You are a controller of a servo connected to an Arduino Nano &amp;quot;\n    &amp;quot;based on your responses. Only respond with numbers between 20 &amp;quot;\n    &amp;quot;and 160 to randomly move the servo position. &amp;quot;\n    &amp;quot;Only send one servo position in decimal per line. &amp;quot;\n    &amp;quot;Send 5 positions in total\\n&amp;quot;;\n\nvoid setup() {\n    Serial.begin(115200);\n    servo.attach(ServoPin);\n\n    last = millis();\n}\n\nvoid loop() {\n    if (Serial.available()) {\n        last = millis();\n        servo.write(Serial.parseInt());\n        delay(1000);\n    }\n\n    if (millis() - last &amp;gt;= 10000) {\n        Serial.print(prompt);\n        last = millis();\n    }\n}\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;&lt;a href=\"https://reddit.com/link/1249bxc/video/0sx9zwxv1eqa1/player\"&gt;An Arduino Nano sending a prompt to ChatGPT via a Python agent running on the PC that uses the openAI Python api to send chat prompts to ChatGPT and then write the response bytes back to the Arduino \ud83e\udd16&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;Cheers!&lt;/p&gt;\n\n&lt;p&gt;&lt;code&gt;ripred&lt;/code&gt;&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;",
  "likes": null,
  "suggested_sort": null,
  "banned_at_utc": null,
  "view_count": null,
  "archived": false,
  "no_follow": false,
  "is_crosspostable": false,
  "pinned": false,
  "over_18": false,
  "all_awardings": [],
  "awarders": [],
  "media_only": false,
  "link_flair_template_id": "811c0e70-b2fb-11ed-8f05-7e120dbcd228",
  "can_gild": false,
  "spoiler": false,
  "locked": false,
  "author_flair_text": null,
  "treatment_tags": [],
  "visited": false,
  "removed_by": null,
  "num_reports": null,
  "distinguished": null,
  "subreddit_id": "t5_7yd5re",
  "author_is_blocked": false,
  "mod_reason_by": null,
  "removal_reason": null,
  "link_flair_background_color": "#c000c0",
  "id": "1249bxc",
  "is_robot_indexable": true,
  "report_reasons": null,
  "author": "ripred3",
  "discussion_type": null,
  "num_comments": 2,
  "send_replies": true,
  "contest_mode": false,
  "mod_reports": [],
  "author_patreon_flair": false,
  "author_flair_text_color": null,
  "permalink": "/r/Arduino_AI/comments/1249bxc/gptduino_arduino_nano_controlling_chatgpt/",
  "stickied": false,
  "url": "https://www.reddit.com/r/Arduino_AI/comments/1249bxc/gptduino_arduino_nano_controlling_chatgpt/",
  "subreddit_subscribers": 3137,
  "created_utc": 1679969605.0,
  "num_crossposts": 2,
  "media": null,
  "is_video": false
}