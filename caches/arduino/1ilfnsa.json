{
  "approved_at_utc": null,
  "subreddit": "arduino",
  "selftext": "Hardware: ESP32 S3 XIAO Sense. I am establishing a BLE server on ESP device. However, whatever UUIDs I may define for my services and characteristics for some reason they don't reflect and a constant UUID is placed for them.\n\nI tried to make more services and characteristics but only 1 of each is made.\n\nHere's the code for ESP32:\n\n    #include &lt;Arduino.h&gt;\n    #include &lt;BLEDevice.h&gt;\n    #include &lt;BLEUtils.h&gt;\n    #include &lt;BLEServer.h&gt;\n    #include &lt;BLECharacteristic.h&gt;\n    #include &lt;BLE2902.h&gt;\n    \n    // Define UUIDs for the service and characteristics\n    #define SERVICE_UUID        \"12345678-1234-1234-1234-1234567890ab\"\n    #define CHARACTERISTIC_1_UUID \"12345678-1234-1234-1234-1234567890ac\"\n    #define CHARACTERISTIC_2_UUID \"12345678-1234-1234-1234-1234567890ab\"\n    \n    BLECharacteristic *pCharacteristic1;\n    BLECharacteristic *pCharacteristic2;\n    \n    // BLE Server callbacks\n    class MyServerCallbacks: public BLEServerCallbacks {\n      void onConnect(BLEServer* pServer) {\n        Serial.println(\"Client Connected\");\n      }\n    \n      void onDisconnect(BLEServer* pServer) {\n        Serial.println(\"Client Disconnected\");\n      }\n    };\n    \n    void setup() {\n      Serial.begin(115200);\n    \n      // Initialize BLE\n      BLEDevice::init(\"ESP32_S3_Xiao_Sense_BLE_Server\");\n      \n      // Create the BLE Server\n      BLEServer *pServer = BLEDevice::createServer();\n      pServer-&gt;setCallbacks(new MyServerCallbacks());\n    \n      // Create the BLE Service\n      BLEService *pService = pServer-&gt;createService(SERVICE_UUID);\n    \n      // Create BLE Characteristics\n      pCharacteristic1 = pService-&gt;createCharacteristic(\n                          CHARACTERISTIC_1_UUID,\n                          BLECharacteristic::PROPERTY_READ |\n                          BLECharacteristic::PROPERTY_NOTIFY\n                        );\n      pCharacteristic1-&gt;addDescriptor(new BLE2902());\n    \n      pCharacteristic2 = pService-&gt;createCharacteristic(\n                          CHARACTERISTIC_2_UUID,\n                          BLECharacteristic::PROPERTY_READ |\n                          BLECharacteristic::PROPERTY_NOTIFY\n                        );\n      pCharacteristic2-&gt;addDescriptor(new BLE2902());\n    \n      // Start the Service\n      pService-&gt;start();\n      delay(100);\n    \n      // Start advertising\n      BLEAdvertising *pAdvertising = pServer-&gt;getAdvertising();\n      pAdvertising-&gt;start();\n    \n      Serial.println(\"Waiting for a client to connect...\");\n    }\n    \n    void loop() {\n      // Sample data to send\n      static uint8_t value1 = 0;\n      static uint8_t value2 = 100;\n    \n      // Write sample data to characteristics\n      pCharacteristic1-&gt;setValue(&amp;value1, 1);\n      pCharacteristic1-&gt;notify();\n      value1++;\n    \n      pCharacteristic2-&gt;setValue(&amp;value2, 1);\n      pCharacteristic2-&gt;notify();\n      value2--;\n    \n      delay(1000); // Notify every second\n    }\n\nHere's the client side discover code:\n\n    import asyncio\n    from bleak import BleakScanner\n    from bleak import BleakClient\n    \n    async def scan_for_services(device_address):\n        # Connect to the device and list its services\n        scanner = BleakScanner()\n        devices = await scanner.discover()\n        \n        for device in devices:\n            if device.address == device_address:  # Check for the ESP32 device by address\n                print(f\"Found device {device.address}\")\n                async with BleakClient(device) as client:\n                    services = await client.get_services()\n                    for service in services:\n                        print(f\"Service: {service.uuid}\")\n                        for characteristic in service.characteristics:\n                            print(f\"  Characteristic: {characteristic.uuid}\")\n    \n    if __name__ == \"__main__\":\n        device_address = \"XX:XX:XX:XX:XX:XX:XX\"  # Replace with your ESP32 address\n        asyncio.run(scan_for_services(device_address))\n\nHere's the output\n\n    Service: 00001801-0000-1000-8000-00805f9b34fb\n      Characteristic: 00002a05-0000-1000-8000-00805f9b34fb\n    Service: 00001800-0000-1000-8000-00805f9b34fb\n      Characteristic: 00002a00-0000-1000-8000-00805f9b34fb\n      Characteristic: 00002a01-0000-1000-8000-00805f9b34fb\n      Characteristic: 00002aa6-0000-1000-8000-00805f9b34fb\n    Service: 12345678-1234-1234-1234-1234567890ab\n      Characteristic: 12345678-1234-1234-1234-1234567890ac\n\nI tried using random UUIDs from the UUID generator, some from out of my head. Some of the UUIDs I used:\n\n1. 00000011-0000-1000-8000-00805f9b34fb\n2. 00002a57-0000-1000-8000-00805f9b34fb",
  "author_fullname": "t2_ljyw649pn",
  "saved": false,
  "mod_reason_title": null,
  "gilded": 0,
  "clicked": false,
  "title": "Unable to create BLE Services and Characterstics",
  "link_flair_richtext": [
    {
      "e": "text",
      "t": "Software Help"
    }
  ],
  "subreddit_name_prefixed": "r/arduino",
  "hidden": false,
  "pwls": 6,
  "link_flair_css_class": "",
  "downs": 0,
  "thumbnail_height": null,
  "top_awarded_type": null,
  "hide_score": true,
  "name": "t3_1ilfnsa",
  "quarantine": false,
  "link_flair_text_color": "dark",
  "upvote_ratio": 1.0,
  "author_flair_background_color": null,
  "subreddit_type": "public",
  "ups": 1,
  "total_awards_received": 0,
  "media_embed": {},
  "thumbnail_width": null,
  "author_flair_template_id": null,
  "is_original_content": false,
  "user_reports": [],
  "secure_media": null,
  "is_reddit_media_domain": false,
  "is_meta": false,
  "category": null,
  "secure_media_embed": {},
  "link_flair_text": "Software Help",
  "can_mod_post": false,
  "score": 1,
  "approved_by": null,
  "is_created_from_ads_ui": false,
  "author_premium": false,
  "thumbnail": "self",
  "edited": false,
  "author_flair_css_class": null,
  "author_flair_richtext": [],
  "gildings": {},
  "content_categories": null,
  "is_self": true,
  "mod_note": null,
  "created": 1739110708.0,
  "link_flair_type": "richtext",
  "wls": 6,
  "removed_by_category": null,
  "banned_by": null,
  "author_flair_type": "text",
  "domain": "self.arduino",
  "allow_live_comments": false,
  "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;Hardware: ESP32 S3 XIAO Sense. I am establishing a BLE server on ESP device. However, whatever UUIDs I may define for my services and characteristics for some reason they don&amp;#39;t reflect and a constant UUID is placed for them.&lt;/p&gt;\n\n&lt;p&gt;I tried to make more services and characteristics but only 1 of each is made.&lt;/p&gt;\n\n&lt;p&gt;Here&amp;#39;s the code for ESP32:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;#include &amp;lt;Arduino.h&amp;gt;\n#include &amp;lt;BLEDevice.h&amp;gt;\n#include &amp;lt;BLEUtils.h&amp;gt;\n#include &amp;lt;BLEServer.h&amp;gt;\n#include &amp;lt;BLECharacteristic.h&amp;gt;\n#include &amp;lt;BLE2902.h&amp;gt;\n\n// Define UUIDs for the service and characteristics\n#define SERVICE_UUID        &amp;quot;12345678-1234-1234-1234-1234567890ab&amp;quot;\n#define CHARACTERISTIC_1_UUID &amp;quot;12345678-1234-1234-1234-1234567890ac&amp;quot;\n#define CHARACTERISTIC_2_UUID &amp;quot;12345678-1234-1234-1234-1234567890ab&amp;quot;\n\nBLECharacteristic *pCharacteristic1;\nBLECharacteristic *pCharacteristic2;\n\n// BLE Server callbacks\nclass MyServerCallbacks: public BLEServerCallbacks {\n  void onConnect(BLEServer* pServer) {\n    Serial.println(&amp;quot;Client Connected&amp;quot;);\n  }\n\n  void onDisconnect(BLEServer* pServer) {\n    Serial.println(&amp;quot;Client Disconnected&amp;quot;);\n  }\n};\n\nvoid setup() {\n  Serial.begin(115200);\n\n  // Initialize BLE\n  BLEDevice::init(&amp;quot;ESP32_S3_Xiao_Sense_BLE_Server&amp;quot;);\n\n  // Create the BLE Server\n  BLEServer *pServer = BLEDevice::createServer();\n  pServer-&amp;gt;setCallbacks(new MyServerCallbacks());\n\n  // Create the BLE Service\n  BLEService *pService = pServer-&amp;gt;createService(SERVICE_UUID);\n\n  // Create BLE Characteristics\n  pCharacteristic1 = pService-&amp;gt;createCharacteristic(\n                      CHARACTERISTIC_1_UUID,\n                      BLECharacteristic::PROPERTY_READ |\n                      BLECharacteristic::PROPERTY_NOTIFY\n                    );\n  pCharacteristic1-&amp;gt;addDescriptor(new BLE2902());\n\n  pCharacteristic2 = pService-&amp;gt;createCharacteristic(\n                      CHARACTERISTIC_2_UUID,\n                      BLECharacteristic::PROPERTY_READ |\n                      BLECharacteristic::PROPERTY_NOTIFY\n                    );\n  pCharacteristic2-&amp;gt;addDescriptor(new BLE2902());\n\n  // Start the Service\n  pService-&amp;gt;start();\n  delay(100);\n\n  // Start advertising\n  BLEAdvertising *pAdvertising = pServer-&amp;gt;getAdvertising();\n  pAdvertising-&amp;gt;start();\n\n  Serial.println(&amp;quot;Waiting for a client to connect...&amp;quot;);\n}\n\nvoid loop() {\n  // Sample data to send\n  static uint8_t value1 = 0;\n  static uint8_t value2 = 100;\n\n  // Write sample data to characteristics\n  pCharacteristic1-&amp;gt;setValue(&amp;amp;value1, 1);\n  pCharacteristic1-&amp;gt;notify();\n  value1++;\n\n  pCharacteristic2-&amp;gt;setValue(&amp;amp;value2, 1);\n  pCharacteristic2-&amp;gt;notify();\n  value2--;\n\n  delay(1000); // Notify every second\n}\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Here&amp;#39;s the client side discover code:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;import asyncio\nfrom bleak import BleakScanner\nfrom bleak import BleakClient\n\nasync def scan_for_services(device_address):\n    # Connect to the device and list its services\n    scanner = BleakScanner()\n    devices = await scanner.discover()\n\n    for device in devices:\n        if device.address == device_address:  # Check for the ESP32 device by address\n            print(f&amp;quot;Found device {device.address}&amp;quot;)\n            async with BleakClient(device) as client:\n                services = await client.get_services()\n                for service in services:\n                    print(f&amp;quot;Service: {service.uuid}&amp;quot;)\n                    for characteristic in service.characteristics:\n                        print(f&amp;quot;  Characteristic: {characteristic.uuid}&amp;quot;)\n\nif __name__ == &amp;quot;__main__&amp;quot;:\n    device_address = &amp;quot;XX:XX:XX:XX:XX:XX:XX&amp;quot;  # Replace with your ESP32 address\n    asyncio.run(scan_for_services(device_address))\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Here&amp;#39;s the output&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;Service: 00001801-0000-1000-8000-00805f9b34fb\n  Characteristic: 00002a05-0000-1000-8000-00805f9b34fb\nService: 00001800-0000-1000-8000-00805f9b34fb\n  Characteristic: 00002a00-0000-1000-8000-00805f9b34fb\n  Characteristic: 00002a01-0000-1000-8000-00805f9b34fb\n  Characteristic: 00002aa6-0000-1000-8000-00805f9b34fb\nService: 12345678-1234-1234-1234-1234567890ab\n  Characteristic: 12345678-1234-1234-1234-1234567890ac\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;I tried using random UUIDs from the UUID generator, some from out of my head. Some of the UUIDs I used:&lt;/p&gt;\n\n&lt;ol&gt;\n&lt;li&gt;00000011-0000-1000-8000-00805f9b34fb&lt;/li&gt;\n&lt;li&gt;00002a57-0000-1000-8000-00805f9b34fb&lt;/li&gt;\n&lt;/ol&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;",
  "likes": null,
  "suggested_sort": "confidence",
  "banned_at_utc": null,
  "view_count": null,
  "archived": false,
  "no_follow": true,
  "is_crosspostable": false,
  "pinned": false,
  "over_18": false,
  "all_awardings": [],
  "awarders": [],
  "media_only": false,
  "link_flair_template_id": "9ea84c66-51ce-11e9-9e95-0ef444aa76d2",
  "can_gild": false,
  "spoiler": false,
  "locked": false,
  "author_flair_text": null,
  "treatment_tags": [],
  "visited": false,
  "removed_by": null,
  "num_reports": null,
  "distinguished": null,
  "subreddit_id": "t5_2qknj",
  "author_is_blocked": false,
  "mod_reason_by": null,
  "removal_reason": null,
  "link_flair_background_color": "#fff911",
  "id": "1ilfnsa",
  "is_robot_indexable": true,
  "report_reasons": null,
  "author": "hero_verma",
  "discussion_type": null,
  "num_comments": 0,
  "send_replies": true,
  "contest_mode": false,
  "mod_reports": [],
  "author_patreon_flair": false,
  "author_flair_text_color": null,
  "permalink": "/r/arduino/comments/1ilfnsa/unable_to_create_ble_services_and_characterstics/",
  "stickied": false,
  "url": "https://www.reddit.com/r/arduino/comments/1ilfnsa/unable_to_create_ble_services_and_characterstics/",
  "subreddit_subscribers": 691374,
  "created_utc": 1739110708.0,
  "num_crossposts": 0,
  "media": null,
  "is_video": false
}