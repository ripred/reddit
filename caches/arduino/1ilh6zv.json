{
  "approved_at_utc": null,
  "subreddit": "arduino",
  "selftext": "Hey guys ,and girls, or whoever reads this. Recently ive been having problems getting my arduino leonardo stetup to recognise my mouse ive been trying to create a human interference device in which i have control over my mouse whilst the arduino does and it is registered as one mouse.\n\nProblems i dont think it would be:\n\n\\-Lack of power, because i think the led of my arduino would be dimmed\n\n\\-Faulty soldering, although im new to this i think my soldering is alright i soldered the 5V 3.3V and GND\n\n\\-Incompatibility, im following an outdated tutorial but suiting it for my needs\n\nIve taken some pictures if anyone would like to adjust my thoughts on these claims, also for knowledge ive downloaded the USB HOST SHIELD LIBARY 2.0\n\nAnd lastly the code:\n\n\\#include &lt;hidboot.h&gt;\n\n\\#include &lt;usbhub.h&gt;\n\n\\#include &lt;Mouse.h&gt;\n\n\\#include &lt;Wire.h&gt;\n\n\\#ifdef dobogusinclude\n\n\\#include &lt;spi4teensy3.h&gt;\n\n\\#endif\n\n\\#include &lt;SPI.h&gt;\n\nUSB     Usb;\n\nUSBHub     Hub(&amp;Usb);\n\nHIDBoot &lt; USB\\_HID\\_PROTOCOL\\_KEYBOARD | USB\\_HID\\_PROTOCOL\\_MOUSE &gt; HidComposite(&amp;Usb);\n\nHIDBoot&lt;USB\\_HID\\_PROTOCOL\\_MOUSE&gt;    HidMouse(&amp;Usb);\n\n\n\n// Signed char can be between -128 to 127\n\nint delta\\[2\\];\n\nint negMax = -127;\n\nint posMax = 127;\n\n\n\n// Mouse\n\nint lmb = 0;\n\nint rmb = 0;\n\nint mmb = 0;\n\n\n\n\n\nclass MouseRptParser : public MouseReportParser\n\n{\n\n  protected:\n\nvoid OnMouseMove(MOUSEINFO \\*mi);\n\nvoid OnLeftButtonUp(MOUSEINFO \\*mi);\n\nvoid OnLeftButtonDown(MOUSEINFO \\*mi);\n\nvoid OnRightButtonUp(MOUSEINFO \\*mi);\n\nvoid OnRightButtonDown(MOUSEINFO \\*mi);\n\nvoid OnMiddleButtonUp(MOUSEINFO \\*mi);\n\nvoid OnMiddleButtonDown(MOUSEINFO \\*mi);\n\n};\n\n\n\nvoid MouseRptParser::OnMouseMove(MOUSEINFO \\*mi)\n\n{\n\n  delta\\[0\\] = mi-&gt;dX;\n\n  delta\\[1\\] = mi-&gt;dY;\n\n};\n\nvoid MouseRptParser::OnLeftButtonUp\t(MOUSEINFO \\*mi)\n\n{\n\n  lmb = 0;\n\n};\n\nvoid MouseRptParser::OnLeftButtonDown\t(MOUSEINFO \\*mi)\n\n{\n\n  lmb = 1;\n\n};\n\nvoid MouseRptParser::OnRightButtonUp\t(MOUSEINFO \\*mi)\n\n{\n\n  rmb = 0;\n\n};\n\nvoid MouseRptParser::OnRightButtonDown\t(MOUSEINFO \\*mi)\n\n{\n\n  rmb = 1;\n\n};\n\nvoid MouseRptParser::OnMiddleButtonUp\t(MOUSEINFO \\*mi)\n\n{\n\n  mmb = 0;\n\n};\n\nvoid MouseRptParser::OnMiddleButtonDown\t(MOUSEINFO \\*mi)\n\n{\n\n  mmb = 1;\n\n};\n\n\n\nMouseRptParser MousePrs;\n\n\n\nvoid setup()\n\n{\n\n  Mouse.begin();\n\n  Serial.begin( 115200 );\n\n  Usb.Init();\n\n  HidComposite.SetReportParser(1, &amp;MousePrs);\n\n  HidMouse.SetReportParser(0, &amp;MousePrs);\n\n}\n\n\n\nvoid loop()\n\n{\n\n  delta\\[0\\] = 0;\n\n  delta\\[1\\] = 0;\n\n  Usb.Task();\n\n  // Left Mouse\n\n  if (lmb == 0){\n\nMouse.release(MOUSE\\_LEFT);\n\n  } else if (lmb == 1){\n\nMouse.press(MOUSE\\_LEFT);\n\n  }\n\n  // Right Mouse\n\n  if (rmb == 0){\n\nMouse.release(MOUSE\\_RIGHT);\n\n  } else if (rmb == 1){\n\nMouse.press(MOUSE\\_RIGHT);\n\n  }\n\n  // Middle Mouse\n\n  if (mmb == 0){\n\nMouse.release(MOUSE\\_MIDDLE);\n\n  } else if (mmb == 1){\n\nMouse.press(MOUSE\\_MIDDLE);\n\n  }\n\n\n\n  if (Serial.available() &gt; 0)\n\n  {\n\n// Read Data\n\nString data = Serial.readStringUntil('x');\n\n\n\n// Gets demarcation between deltaX and DeltaY\n\nint ohHiMarc = data.indexOf(':');\n\nSerial.println(data);\n\n\n\n// DeltaX &amp; DeltaY\n\ndelta\\[0\\] = data.substring(0, ohHiMarc).toInt();\n\ndelta\\[1\\] = data.substring(ohHiMarc + 1).toInt();\n\n\n\nhandleX(delta\\[0\\]);\n\nhandleY(delta\\[1\\]);\n\n  } else{\n\nMouse.move(delta\\[0\\], delta\\[1\\]);\n\n  }\n\n}\n\n\n\n// Handle Moving of x \n\nvoid handleX(int dx){\n\n  \n\n  int spawns; \n\n  int remainder;\n\n  \n\n  if(dx &lt; negMax)\n\n  {\n\n// How many times we move mouse\n\nspawns = int(dx / negMax); \n\n\n\n// How much we move after for loop\n\nremainder = int(dx % negMax);\n\n\n\n// Because we can only move 125 at a time,\n\n// we need a for loop to spawn multiple mouse events.\n\nfor(int i = 0; i &lt; spawns; i++)\n\n{\n\nMouse.move(negMax , 0, 0);\n\n}\n\n// Move Remainder\n\nMouse.move(remainder, 0, 0);\n\n  } \n\n  else if (dx &gt;= negMax &amp;&amp; dx &lt;= posMax)\n\n  {\n\nMouse.move(dx, 0, 0);\n\n  }\n\n  else if (dx &gt; posMax)\n\n  {\n\n// How many times we move mouse\n\nspawns = int(dx / posMax); \n\n\n\n// How much we move after for loop\n\nremainder = int(dx % posMax);\n\n\n\nfor(int i = 0; i &lt; spawns; i++)\n\n{\n\nMouse.move(posMax , 0, 0);\n\n}\n\n// Move Remainder\n\nMouse.move(remainder, 0, 0);\n\n  }\n\n  \n\n}\n\n\n\n// Handle Moving of x \n\nvoid handleY(int dy){\n\n  \n\n  int spawns; \n\n  int remainder;\n\n  // MindTrip, Neg is pos &amp; Pos is Neg for move, hence the inverted pos &amp; Neg\n\n  if(dy &lt; negMax)\n\n  {\n\n// How many times we move mouse\n\nspawns = int(dy / negMax); \n\n\n\n// How much we move after for loop. -1 converts to correct direction on arduino (pos,neg,neg,pos)\n\nremainder = int(dy % negMax);\n\nremainder \\*= -1;\n\n// Because we can only move 125 at a time,\n\n// we need a for loop to spawn multiple mouse events.\n\nfor(int i = 0; i &lt; spawns; i++)\n\n{\n\nMouse.move(0, posMax, 0);\n\n}\n\n// Move Remainder\n\nMouse.move(0, remainder, 0);\n\n  } \n\n  else if (dy &gt;= negMax &amp;&amp; dy &lt;= posMax)\n\n  {\n\ndy \\*= -1;\n\nMouse.move(0, dy, 0);\n\n  }\n\n  else if (dy &gt; posMax)\n\n  {\n\n// How many times we move mouse\n\nspawns = int(dy / posMax); \n\n\n\n// How much we move after for loop\n\nremainder = int(dy % posMax);\n\nremainder \\*= -1;\n\n\n\nfor(int i = 0; i &lt; spawns; i++)\n\n{\n\nMouse.move(0, negMax, 0);\n\n}\n\n// Move Remainder\n\nMouse.move(0, remainder, 0);\n\n  }\n\n};",
  "author_fullname": "t2_10yrr94je4",
  "saved": false,
  "mod_reason_title": null,
  "gilded": 0,
  "clicked": false,
  "title": "Arduino Leonardo &amp; Host shield: Human Interference Device, assistance needed",
  "link_flair_richtext": [
    {
      "e": "text",
      "t": "Hardware Help"
    }
  ],
  "subreddit_name_prefixed": "r/arduino",
  "hidden": false,
  "pwls": 6,
  "link_flair_css_class": "",
  "downs": 0,
  "thumbnail_height": null,
  "top_awarded_type": null,
  "hide_score": true,
  "name": "t3_1ilh6zv",
  "quarantine": false,
  "link_flair_text_color": "dark",
  "upvote_ratio": 1.0,
  "author_flair_background_color": null,
  "subreddit_type": "public",
  "ups": 1,
  "total_awards_received": 0,
  "media_embed": {},
  "thumbnail_width": null,
  "author_flair_template_id": null,
  "is_original_content": false,
  "user_reports": [],
  "secure_media": null,
  "is_reddit_media_domain": false,
  "is_meta": false,
  "category": null,
  "secure_media_embed": {},
  "link_flair_text": "Hardware Help",
  "can_mod_post": false,
  "score": 1,
  "approved_by": null,
  "is_created_from_ads_ui": false,
  "author_premium": false,
  "thumbnail": "self",
  "edited": false,
  "author_flair_css_class": null,
  "author_flair_richtext": [],
  "gildings": {},
  "content_categories": null,
  "is_self": true,
  "mod_note": null,
  "created": 1739115006.0,
  "link_flair_type": "richtext",
  "wls": 6,
  "removed_by_category": null,
  "banned_by": null,
  "author_flair_type": "text",
  "domain": "self.arduino",
  "allow_live_comments": false,
  "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;Hey guys ,and girls, or whoever reads this. Recently ive been having problems getting my arduino leonardo stetup to recognise my mouse ive been trying to create a human interference device in which i have control over my mouse whilst the arduino does and it is registered as one mouse.&lt;/p&gt;\n\n&lt;p&gt;Problems i dont think it would be:&lt;/p&gt;\n\n&lt;p&gt;-Lack of power, because i think the led of my arduino would be dimmed&lt;/p&gt;\n\n&lt;p&gt;-Faulty soldering, although im new to this i think my soldering is alright i soldered the 5V 3.3V and GND&lt;/p&gt;\n\n&lt;p&gt;-Incompatibility, im following an outdated tutorial but suiting it for my needs&lt;/p&gt;\n\n&lt;p&gt;Ive taken some pictures if anyone would like to adjust my thoughts on these claims, also for knowledge ive downloaded the USB HOST SHIELD LIBARY 2.0&lt;/p&gt;\n\n&lt;p&gt;And lastly the code:&lt;/p&gt;\n\n&lt;p&gt;#include &amp;lt;hidboot.h&amp;gt;&lt;/p&gt;\n\n&lt;p&gt;#include &amp;lt;usbhub.h&amp;gt;&lt;/p&gt;\n\n&lt;p&gt;#include &amp;lt;Mouse.h&amp;gt;&lt;/p&gt;\n\n&lt;p&gt;#include &amp;lt;Wire.h&amp;gt;&lt;/p&gt;\n\n&lt;p&gt;#ifdef dobogusinclude&lt;/p&gt;\n\n&lt;p&gt;#include &amp;lt;spi4teensy3.h&amp;gt;&lt;/p&gt;\n\n&lt;p&gt;#endif&lt;/p&gt;\n\n&lt;p&gt;#include &amp;lt;SPI.h&amp;gt;&lt;/p&gt;\n\n&lt;p&gt;USB     Usb;&lt;/p&gt;\n\n&lt;p&gt;USBHub     Hub(&amp;amp;Usb);&lt;/p&gt;\n\n&lt;p&gt;HIDBoot &amp;lt; USB_HID_PROTOCOL_KEYBOARD | USB_HID_PROTOCOL_MOUSE &amp;gt; HidComposite(&amp;amp;Usb);&lt;/p&gt;\n\n&lt;p&gt;HIDBoot&amp;lt;USB\\_HID\\_PROTOCOL\\_MOUSE&amp;gt;    HidMouse(&amp;amp;Usb);&lt;/p&gt;\n\n&lt;p&gt;// Signed char can be between -128 to 127&lt;/p&gt;\n\n&lt;p&gt;int delta[2];&lt;/p&gt;\n\n&lt;p&gt;int negMax = -127;&lt;/p&gt;\n\n&lt;p&gt;int posMax = 127;&lt;/p&gt;\n\n&lt;p&gt;// Mouse&lt;/p&gt;\n\n&lt;p&gt;int lmb = 0;&lt;/p&gt;\n\n&lt;p&gt;int rmb = 0;&lt;/p&gt;\n\n&lt;p&gt;int mmb = 0;&lt;/p&gt;\n\n&lt;p&gt;class MouseRptParser : public MouseReportParser&lt;/p&gt;\n\n&lt;p&gt;{&lt;/p&gt;\n\n&lt;p&gt;protected:&lt;/p&gt;\n\n&lt;p&gt;void OnMouseMove(MOUSEINFO *mi);&lt;/p&gt;\n\n&lt;p&gt;void OnLeftButtonUp(MOUSEINFO *mi);&lt;/p&gt;\n\n&lt;p&gt;void OnLeftButtonDown(MOUSEINFO *mi);&lt;/p&gt;\n\n&lt;p&gt;void OnRightButtonUp(MOUSEINFO *mi);&lt;/p&gt;\n\n&lt;p&gt;void OnRightButtonDown(MOUSEINFO *mi);&lt;/p&gt;\n\n&lt;p&gt;void OnMiddleButtonUp(MOUSEINFO *mi);&lt;/p&gt;\n\n&lt;p&gt;void OnMiddleButtonDown(MOUSEINFO *mi);&lt;/p&gt;\n\n&lt;p&gt;};&lt;/p&gt;\n\n&lt;p&gt;void MouseRptParser::OnMouseMove(MOUSEINFO *mi)&lt;/p&gt;\n\n&lt;p&gt;{&lt;/p&gt;\n\n&lt;p&gt;delta[0] = mi-&amp;gt;dX;&lt;/p&gt;\n\n&lt;p&gt;delta[1] = mi-&amp;gt;dY;&lt;/p&gt;\n\n&lt;p&gt;};&lt;/p&gt;\n\n&lt;p&gt;void MouseRptParser::OnLeftButtonUp (MOUSEINFO *mi)&lt;/p&gt;\n\n&lt;p&gt;{&lt;/p&gt;\n\n&lt;p&gt;lmb = 0;&lt;/p&gt;\n\n&lt;p&gt;};&lt;/p&gt;\n\n&lt;p&gt;void MouseRptParser::OnLeftButtonDown   (MOUSEINFO *mi)&lt;/p&gt;\n\n&lt;p&gt;{&lt;/p&gt;\n\n&lt;p&gt;lmb = 1;&lt;/p&gt;\n\n&lt;p&gt;};&lt;/p&gt;\n\n&lt;p&gt;void MouseRptParser::OnRightButtonUp    (MOUSEINFO *mi)&lt;/p&gt;\n\n&lt;p&gt;{&lt;/p&gt;\n\n&lt;p&gt;rmb = 0;&lt;/p&gt;\n\n&lt;p&gt;};&lt;/p&gt;\n\n&lt;p&gt;void MouseRptParser::OnRightButtonDown  (MOUSEINFO *mi)&lt;/p&gt;\n\n&lt;p&gt;{&lt;/p&gt;\n\n&lt;p&gt;rmb = 1;&lt;/p&gt;\n\n&lt;p&gt;};&lt;/p&gt;\n\n&lt;p&gt;void MouseRptParser::OnMiddleButtonUp   (MOUSEINFO *mi)&lt;/p&gt;\n\n&lt;p&gt;{&lt;/p&gt;\n\n&lt;p&gt;mmb = 0;&lt;/p&gt;\n\n&lt;p&gt;};&lt;/p&gt;\n\n&lt;p&gt;void MouseRptParser::OnMiddleButtonDown (MOUSEINFO *mi)&lt;/p&gt;\n\n&lt;p&gt;{&lt;/p&gt;\n\n&lt;p&gt;mmb = 1;&lt;/p&gt;\n\n&lt;p&gt;};&lt;/p&gt;\n\n&lt;p&gt;MouseRptParser MousePrs;&lt;/p&gt;\n\n&lt;p&gt;void setup()&lt;/p&gt;\n\n&lt;p&gt;{&lt;/p&gt;\n\n&lt;p&gt;Mouse.begin();&lt;/p&gt;\n\n&lt;p&gt;Serial.begin( 115200 );&lt;/p&gt;\n\n&lt;p&gt;Usb.Init();&lt;/p&gt;\n\n&lt;p&gt;HidComposite.SetReportParser(1, &amp;amp;MousePrs);&lt;/p&gt;\n\n&lt;p&gt;HidMouse.SetReportParser(0, &amp;amp;MousePrs);&lt;/p&gt;\n\n&lt;p&gt;}&lt;/p&gt;\n\n&lt;p&gt;void loop()&lt;/p&gt;\n\n&lt;p&gt;{&lt;/p&gt;\n\n&lt;p&gt;delta[0] = 0;&lt;/p&gt;\n\n&lt;p&gt;delta[1] = 0;&lt;/p&gt;\n\n&lt;p&gt;Usb.Task();&lt;/p&gt;\n\n&lt;p&gt;// Left Mouse&lt;/p&gt;\n\n&lt;p&gt;if (lmb == 0){&lt;/p&gt;\n\n&lt;p&gt;Mouse.release(MOUSE_LEFT);&lt;/p&gt;\n\n&lt;p&gt;} else if (lmb == 1){&lt;/p&gt;\n\n&lt;p&gt;Mouse.press(MOUSE_LEFT);&lt;/p&gt;\n\n&lt;p&gt;}&lt;/p&gt;\n\n&lt;p&gt;// Right Mouse&lt;/p&gt;\n\n&lt;p&gt;if (rmb == 0){&lt;/p&gt;\n\n&lt;p&gt;Mouse.release(MOUSE_RIGHT);&lt;/p&gt;\n\n&lt;p&gt;} else if (rmb == 1){&lt;/p&gt;\n\n&lt;p&gt;Mouse.press(MOUSE_RIGHT);&lt;/p&gt;\n\n&lt;p&gt;}&lt;/p&gt;\n\n&lt;p&gt;// Middle Mouse&lt;/p&gt;\n\n&lt;p&gt;if (mmb == 0){&lt;/p&gt;\n\n&lt;p&gt;Mouse.release(MOUSE_MIDDLE);&lt;/p&gt;\n\n&lt;p&gt;} else if (mmb == 1){&lt;/p&gt;\n\n&lt;p&gt;Mouse.press(MOUSE_MIDDLE);&lt;/p&gt;\n\n&lt;p&gt;}&lt;/p&gt;\n\n&lt;p&gt;if (Serial.available() &amp;gt; 0)&lt;/p&gt;\n\n&lt;p&gt;{&lt;/p&gt;\n\n&lt;p&gt;// Read Data&lt;/p&gt;\n\n&lt;p&gt;String data = Serial.readStringUntil(&amp;#39;x&amp;#39;);&lt;/p&gt;\n\n&lt;p&gt;// Gets demarcation between deltaX and DeltaY&lt;/p&gt;\n\n&lt;p&gt;int ohHiMarc = data.indexOf(&amp;#39;:&amp;#39;);&lt;/p&gt;\n\n&lt;p&gt;Serial.println(data);&lt;/p&gt;\n\n&lt;p&gt;// DeltaX &amp;amp; DeltaY&lt;/p&gt;\n\n&lt;p&gt;delta[0] = data.substring(0, ohHiMarc).toInt();&lt;/p&gt;\n\n&lt;p&gt;delta[1] = data.substring(ohHiMarc + 1).toInt();&lt;/p&gt;\n\n&lt;p&gt;handleX(delta[0]);&lt;/p&gt;\n\n&lt;p&gt;handleY(delta[1]);&lt;/p&gt;\n\n&lt;p&gt;} else{&lt;/p&gt;\n\n&lt;p&gt;Mouse.move(delta[0], delta[1]);&lt;/p&gt;\n\n&lt;p&gt;}&lt;/p&gt;\n\n&lt;p&gt;}&lt;/p&gt;\n\n&lt;p&gt;// Handle Moving of x &lt;/p&gt;\n\n&lt;p&gt;void handleX(int dx){&lt;/p&gt;\n\n&lt;p&gt;int spawns; &lt;/p&gt;\n\n&lt;p&gt;int remainder;&lt;/p&gt;\n\n&lt;p&gt;if(dx &amp;lt; negMax)&lt;/p&gt;\n\n&lt;p&gt;{&lt;/p&gt;\n\n&lt;p&gt;// How many times we move mouse&lt;/p&gt;\n\n&lt;p&gt;spawns = int(dx / negMax); &lt;/p&gt;\n\n&lt;p&gt;// How much we move after for loop&lt;/p&gt;\n\n&lt;p&gt;remainder = int(dx % negMax);&lt;/p&gt;\n\n&lt;p&gt;// Because we can only move 125 at a time,&lt;/p&gt;\n\n&lt;p&gt;// we need a for loop to spawn multiple mouse events.&lt;/p&gt;\n\n&lt;p&gt;for(int i = 0; i &amp;lt; spawns; i++)&lt;/p&gt;\n\n&lt;p&gt;{&lt;/p&gt;\n\n&lt;p&gt;Mouse.move(negMax , 0, 0);&lt;/p&gt;\n\n&lt;p&gt;}&lt;/p&gt;\n\n&lt;p&gt;// Move Remainder&lt;/p&gt;\n\n&lt;p&gt;Mouse.move(remainder, 0, 0);&lt;/p&gt;\n\n&lt;p&gt;} &lt;/p&gt;\n\n&lt;p&gt;else if (dx &amp;gt;= negMax &amp;amp;&amp;amp; dx &amp;lt;= posMax)&lt;/p&gt;\n\n&lt;p&gt;{&lt;/p&gt;\n\n&lt;p&gt;Mouse.move(dx, 0, 0);&lt;/p&gt;\n\n&lt;p&gt;}&lt;/p&gt;\n\n&lt;p&gt;else if (dx &amp;gt; posMax)&lt;/p&gt;\n\n&lt;p&gt;{&lt;/p&gt;\n\n&lt;p&gt;// How many times we move mouse&lt;/p&gt;\n\n&lt;p&gt;spawns = int(dx / posMax); &lt;/p&gt;\n\n&lt;p&gt;// How much we move after for loop&lt;/p&gt;\n\n&lt;p&gt;remainder = int(dx % posMax);&lt;/p&gt;\n\n&lt;p&gt;for(int i = 0; i &amp;lt; spawns; i++)&lt;/p&gt;\n\n&lt;p&gt;{&lt;/p&gt;\n\n&lt;p&gt;Mouse.move(posMax , 0, 0);&lt;/p&gt;\n\n&lt;p&gt;}&lt;/p&gt;\n\n&lt;p&gt;// Move Remainder&lt;/p&gt;\n\n&lt;p&gt;Mouse.move(remainder, 0, 0);&lt;/p&gt;\n\n&lt;p&gt;}&lt;/p&gt;\n\n&lt;p&gt;}&lt;/p&gt;\n\n&lt;p&gt;// Handle Moving of x &lt;/p&gt;\n\n&lt;p&gt;void handleY(int dy){&lt;/p&gt;\n\n&lt;p&gt;int spawns; &lt;/p&gt;\n\n&lt;p&gt;int remainder;&lt;/p&gt;\n\n&lt;p&gt;// MindTrip, Neg is pos &amp;amp; Pos is Neg for move, hence the inverted pos &amp;amp; Neg&lt;/p&gt;\n\n&lt;p&gt;if(dy &amp;lt; negMax)&lt;/p&gt;\n\n&lt;p&gt;{&lt;/p&gt;\n\n&lt;p&gt;// How many times we move mouse&lt;/p&gt;\n\n&lt;p&gt;spawns = int(dy / negMax); &lt;/p&gt;\n\n&lt;p&gt;// How much we move after for loop. -1 converts to correct direction on arduino (pos,neg,neg,pos)&lt;/p&gt;\n\n&lt;p&gt;remainder = int(dy % negMax);&lt;/p&gt;\n\n&lt;p&gt;remainder *= -1;&lt;/p&gt;\n\n&lt;p&gt;// Because we can only move 125 at a time,&lt;/p&gt;\n\n&lt;p&gt;// we need a for loop to spawn multiple mouse events.&lt;/p&gt;\n\n&lt;p&gt;for(int i = 0; i &amp;lt; spawns; i++)&lt;/p&gt;\n\n&lt;p&gt;{&lt;/p&gt;\n\n&lt;p&gt;Mouse.move(0, posMax, 0);&lt;/p&gt;\n\n&lt;p&gt;}&lt;/p&gt;\n\n&lt;p&gt;// Move Remainder&lt;/p&gt;\n\n&lt;p&gt;Mouse.move(0, remainder, 0);&lt;/p&gt;\n\n&lt;p&gt;} &lt;/p&gt;\n\n&lt;p&gt;else if (dy &amp;gt;= negMax &amp;amp;&amp;amp; dy &amp;lt;= posMax)&lt;/p&gt;\n\n&lt;p&gt;{&lt;/p&gt;\n\n&lt;p&gt;dy *= -1;&lt;/p&gt;\n\n&lt;p&gt;Mouse.move(0, dy, 0);&lt;/p&gt;\n\n&lt;p&gt;}&lt;/p&gt;\n\n&lt;p&gt;else if (dy &amp;gt; posMax)&lt;/p&gt;\n\n&lt;p&gt;{&lt;/p&gt;\n\n&lt;p&gt;// How many times we move mouse&lt;/p&gt;\n\n&lt;p&gt;spawns = int(dy / posMax); &lt;/p&gt;\n\n&lt;p&gt;// How much we move after for loop&lt;/p&gt;\n\n&lt;p&gt;remainder = int(dy % posMax);&lt;/p&gt;\n\n&lt;p&gt;remainder *= -1;&lt;/p&gt;\n\n&lt;p&gt;for(int i = 0; i &amp;lt; spawns; i++)&lt;/p&gt;\n\n&lt;p&gt;{&lt;/p&gt;\n\n&lt;p&gt;Mouse.move(0, negMax, 0);&lt;/p&gt;\n\n&lt;p&gt;}&lt;/p&gt;\n\n&lt;p&gt;// Move Remainder&lt;/p&gt;\n\n&lt;p&gt;Mouse.move(0, remainder, 0);&lt;/p&gt;\n\n&lt;p&gt;}&lt;/p&gt;\n\n&lt;p&gt;};&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;",
  "likes": null,
  "suggested_sort": "confidence",
  "banned_at_utc": null,
  "view_count": null,
  "archived": false,
  "no_follow": true,
  "is_crosspostable": false,
  "pinned": false,
  "over_18": false,
  "all_awardings": [],
  "awarders": [],
  "media_only": false,
  "link_flair_template_id": "95279390-51ce-11e9-887b-0e6f64f4557a",
  "can_gild": false,
  "spoiler": false,
  "locked": false,
  "author_flair_text": null,
  "treatment_tags": [],
  "visited": false,
  "removed_by": null,
  "num_reports": null,
  "distinguished": null,
  "subreddit_id": "t5_2qknj",
  "author_is_blocked": false,
  "mod_reason_by": null,
  "removal_reason": null,
  "link_flair_background_color": "#ffbb30",
  "id": "1ilh6zv",
  "is_robot_indexable": true,
  "report_reasons": null,
  "author": "TopGrocery2307",
  "discussion_type": null,
  "num_comments": 0,
  "send_replies": true,
  "contest_mode": false,
  "mod_reports": [],
  "author_patreon_flair": false,
  "author_flair_text_color": null,
  "permalink": "/r/arduino/comments/1ilh6zv/arduino_leonardo_host_shield_human_interference/",
  "stickied": false,
  "url": "https://www.reddit.com/r/arduino/comments/1ilh6zv/arduino_leonardo_host_shield_human_interference/",
  "subreddit_subscribers": 691380,
  "created_utc": 1739115006.0,
  "num_crossposts": 0,
  "media": null,
  "is_video": false
}