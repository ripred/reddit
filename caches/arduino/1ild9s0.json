{
  "approved_at_utc": null,
  "subreddit": "arduino",
  "selftext": "I hope this is the right flair(can't tell)\n\nHello. I am currently working on a Prop for a Costume, the prop has to display lights, a display, and play audio on a button press.(it's a Blaster from Star Wars).\n\nThe lights and Display part is solved via an SSD1306 OLED and a set of WS2812/Neopixels.\n\nMy current progress is incorporating the sound.\n\nI am currently using a (china clone I am pretty sure) DFplayerMini for this. \n\nMy problem is that there is a very noticeable delay between the press of the button and the sound playing(around 800ms) which makes it unusable for the intended purpose. currently, I am waiting after asking it to play till the busy pin reports back, which USUALLY works.\n\ni am using a FAT32 formated 64gb class10 UHS1 SD card from Sandisk.\n\nMy second problem involves the sounds themself. Namely, because the DF player doesn't support Polymorphic sound during \"rapid fire\" the Sound file is cut off, which wouldn't be as big of a problem IF the start delay wasn't so big that under normal circumstances the AudioFile didn't even yet start to play when the next shot would be fired(the current fire rate is around 480rpm but I would be willing to go lower, but with the current delay the fire rate would be close to 60 which is less then I ideally would want) currently the Flashing continues while the sound plays once. and then restarts.\n\n\n\n  \nI have 2 more DFplayerminis, and I would be willing to add them to them together but with the current lag that would not help a lot. \n\nThe library I am using is &lt;BLTroniX\\_Mini\\_Mp3.h&gt; which was from this [Github](https://github.com/PropTroniX/E-11-Blaster-Electronics-V1.0) project that I found when searching for a solution (and coincidentally was very similar to my plan already anyway). I also tried the default library for The DFplayer as well as the [DFplayerMini\\_Fast](https://github.com/PowerBroker2/DFPlayerMini_Fast) library, to no (reasonable) effect\n\n\n\nSo I have essentially 2 questions, \n\na) are genuine DFplayerMinis better in the delay department? and B) what would be a different alternative to my current problem, alternative boards, and their price points essentially.\n\n\n\n[The circuit board., the SSD1306 is a 128x32 varianta in my case, but Wokwi dosnt have that module.](https://preview.redd.it/tkv0vl5kq3ie1.png?width=885&amp;format=png&amp;auto=webp&amp;s=d99533f7c96927531700b9e23caedbb045ecd9f1)\n\n\n\n    #include \"SSD1306Ascii.h\"\n    #include \"SSD1306AsciiWire.h\"\n    #include &lt;Wire.h&gt;\n    #include &lt;Adafruit_NeoPixel.h&gt;\n    #include \"SoftwareSerial.h\"\n    #include &lt;BLTroniX_Mini_Mp3.h&gt;\n    \n    // OLED and NeoPixel settings\n    #define I2C_ADDRESS 0x3C  // OLED I2C address\n    #define PIN_NEO_PIXEL 5   // NeoPixel control pin\n    #define NUM_PIXELS 20     // Number of NeoPixels in the strip\n    #define NUM_FIRE_PIXELS 1\n    \n    \n    // Neopixel colors\n    #define Red 0 \n    #define Blue 30\n    #define Green 15\n    \n    // Pin definitions\n    #define FIRE_PIN 9       \n    #define BUTTON_PIN 4     \n    #define MAG_PIN 3        \n    #define RESET_BUTTON_PIN 6 \n    #define MP3_Busy 2\n    SoftwareSerial mySoftwareSerial(10, 11); \n    \n    // Create NeoPixel and OLED objects\n    Adafruit_NeoPixel NeoPixel(NUM_PIXELS, PIN_NEO_PIXEL, NEO_GRB + NEO_KHZ800);\n    Adafruit_NeoPixel FirePixel(NUM_FIRE_PIXELS, FIRE_PIN, NEO_GRB + NEO_KHZ800);\n    SSD1306AsciiWire oled;\n    \n    // Ammo-related variables\n    int ammo = 600;        \n    int currentMag = 60;    \n    bool reloaded = false;  \n    int oldLevel = -1;      \n    \n    // Timing variables\n    unsigned long lastFireTime = 0;    \n    const unsigned long fireRate = 125; \n    \n    \n    \n    \n    void setup() {\n      Wire.begin();\n      Wire.setClock(400000);\n      oled.begin(&amp;Adafruit128x64, I2C_ADDRESS);\n      oled.setFont(lcdnums14x24);\n      oled.set2X();\n    \n      mySoftwareSerial.begin(9600);\n      Serial.begin(9600);\n      mp3_set_serial(mySoftwareSerial);\n      mp3_reset();\n      delay(300);\n      mp3_set_volume(10);\n    \n      oled.clear();\n      oled.setCursor(20, 1);\n      oled.println(ammo);\n    \n      pinMode(BUTTON_PIN, INPUT_PULLUP);\n      pinMode(MAG_PIN, INPUT_PULLUP);\n      pinMode(FIRE_PIN, OUTPUT);\n      pinMode(RESET_BUTTON_PIN, INPUT_PULLUP);\n      pinMode(MP3_Busy, INPUT);\n    \n      NeoPixel.begin();\n      NeoPixel.show();\n    \n      for (int pixel = 0; pixel &lt; NUM_PIXELS; pixel++) {\n        NeoPixel.setPixelColor(NUM_PIXELS - pixel - 1, NeoPixel.Color(Red, Green, Blue));\n        NeoPixel.show();\n        delay(30);\n      }\n    }\n    \n    void loop() {\n      int buttonState = digitalRead(BUTTON_PIN);\n      int magState = digitalRead(MAG_PIN);\n      int resetButtonState = digitalRead(RESET_BUTTON_PIN);\n    \n      if (magState == LOW) {\n        reloaded = true;\n      } else if (magState == HIGH &amp;&amp; reloaded) {\n        reloadMag();\n      }\n    \n      if (buttonState == LOW &amp;&amp; !reloaded &amp;&amp; (millis() - lastFireTime &gt;= fireRate)) {\n        fire();\n      }\n    \n     if (buttonState == HIGH &amp;&amp; digitalRead(MP3_Busy) == LOW) {\n        delay(50);\n       // mp3_stop();\n      }\n    \n      if (resetButtonState == LOW) {\n        resetAmmo();\n      }\n    }\n    \n    void resetAmmo() {\n      ammo = 600;\n      reloaded = true;\n    \n      for (int i = 0; i &lt; 6; i++) {\n        oled.setCursor(20, 1);\n        oled.print(ammo);\n        delay(200);\n        oled.clear();\n        delay(200);\n      }\n    \n      oled.setCursor(20, 1);\n      oled.print(ammo);\n      reloadMag();\n    }\n    \n    void reloadMag() {\n      currentMag = (ammo &gt;= 60) ? 60 : ammo;\n      \n    \n      for (int pixel = 0; pixel &lt; (currentMag + 2) / 3; pixel++) {\n        NeoPixel.setPixelColor(NUM_PIXELS - pixel - 1, NeoPixel.Color(Red, Green, Blue));\n        NeoPixel.show();\n        delay(50);\n      }\n    \n      oldLevel = -1;\n      reloaded = false;\n    }\n    void fire() {\n        if (ammo == 0) {\n            displayEmptyAmmo();\n            return;\n        }\n        \n        unsigned long currentMillis = millis();\n        \n        // Check if we can fire based on the fire rate\n        if (currentMillis - lastFireTime &lt; fireRate) {\n            return;\n        }\n    \n        lastFireTime = currentMillis; // Update last fire time\n    \n        if (currentMag &gt; 0 &amp;&amp; digitalRead(MAG_PIN) == HIGH) {\n            // Play MP3 sound if not already playing\n            if (digitalRead(MP3_Busy) == HIGH) {\n                mp3_play(1);\n                while (digitalRead(MP3_Busy) == HIGH) {}  // Wait for it to start\n            }\n    \n            // Muzzle flash\n            FirePixel.setPixelColor(0, FirePixel.Color(Red, Green, Blue));\n            FirePixel.show();\n            delay(80); // Flash duration\n            FirePixel.setPixelColor(0, FirePixel.Color(0, 0, 0)); \n            FirePixel.show();\n    \n            // Reduce ammo count\n            ammo--;\n            currentMag--;\n    \n            //Stop MP3 if mag is empty**\n            if (currentMag == 0) {\n                mp3_stop();\n            }\n    \n            // Update display and NeoPixels\n            updateOled();\n            updateNeoPixel();\n        }\n    }\n    \n    void displayEmptyAmmo() {\n      for (int i = 0; i &lt; 2; i++) {\n        oled.clear();\n        delay(200);\n        oled.setCursor(20, 1);\n        oled.print(\"000\");\n        delay(200);\n      }\n    }\n    \n    void updateOled() {\n      oled.setCursor(20, 1);\n      if (ammo &lt; 10) {\n        oled.print(\"00\");\n      } else if (ammo &lt; 100) {\n        oled.print(\"0\");\n      }\n      oled.print(ammo);\n    }\n    \n    void updateNeoPixel() {\n      int ledLevel = (currentMag + 2) / 3;\n    \n      if (oldLevel == ledLevel) return;\n    \n      for (int pixel = 0; pixel &lt; NUM_PIXELS; pixel++) {\n        if (pixel &lt; NUM_PIXELS - ledLevel) {\n          NeoPixel.setPixelColor(pixel, NeoPixel.Color(0, 0, 0));\n        } else {\n          NeoPixel.setPixelColor(pixel, NeoPixel.Color(Red, Green, Blue));\n        }\n      }\n      NeoPixel.show();\n    \n      if (ammo == 0) {\n        for (int pixel = 0; pixel &lt; NUM_PIXELS; pixel++) {\n          NeoPixel.setPixelColor(NUM_PIXELS - pixel - 1, NeoPixel.Color(56, 0, 0));\n          NeoPixel.show();\n          delay(50);\n        }\n      }\n    \n      oldLevel = ledLevel;\n    }",
  "author_fullname": "t2_6nzgqq43",
  "saved": false,
  "mod_reason_title": null,
  "gilded": 0,
  "clicked": false,
  "title": "Require help for Audioplayback for a Costume Prop",
  "link_flair_richtext": [
    {
      "e": "text",
      "t": "Hardware Help"
    }
  ],
  "subreddit_name_prefixed": "r/arduino",
  "hidden": false,
  "pwls": 6,
  "link_flair_css_class": "",
  "downs": 0,
  "thumbnail_height": 70,
  "top_awarded_type": null,
  "hide_score": false,
  "media_metadata": {
    "tkv0vl5kq3ie1": {
      "status": "valid",
      "e": "Image",
      "m": "image/png",
      "p": [
        {
          "y": 68,
          "x": 108,
          "u": "https://preview.redd.it/tkv0vl5kq3ie1.png?width=108&amp;crop=smart&amp;auto=webp&amp;s=8e58cc464a8d80764239d6a7eacf1f59fdd4ef74"
        },
        {
          "y": 137,
          "x": 216,
          "u": "https://preview.redd.it/tkv0vl5kq3ie1.png?width=216&amp;crop=smart&amp;auto=webp&amp;s=f80de31b8e921b941324bc39e2f0e6c9178980ec"
        },
        {
          "y": 203,
          "x": 320,
          "u": "https://preview.redd.it/tkv0vl5kq3ie1.png?width=320&amp;crop=smart&amp;auto=webp&amp;s=1aabc8811b01be6c85e8afb5c852d0985bac6cf0"
        },
        {
          "y": 407,
          "x": 640,
          "u": "https://preview.redd.it/tkv0vl5kq3ie1.png?width=640&amp;crop=smart&amp;auto=webp&amp;s=ced60dffab78242a7fa6ee119a1fcb4f8fded446"
        }
      ],
      "s": {
        "y": 563,
        "x": 885,
        "u": "https://preview.redd.it/tkv0vl5kq3ie1.png?width=885&amp;format=png&amp;auto=webp&amp;s=d99533f7c96927531700b9e23caedbb045ecd9f1"
      },
      "id": "tkv0vl5kq3ie1"
    }
  },
  "name": "t3_1ild9s0",
  "quarantine": false,
  "link_flair_text_color": "dark",
  "upvote_ratio": 0.5,
  "author_flair_background_color": null,
  "ups": 0,
  "total_awards_received": 0,
  "media_embed": {},
  "thumbnail_width": 140,
  "author_flair_template_id": null,
  "is_original_content": false,
  "user_reports": [],
  "secure_media": null,
  "is_reddit_media_domain": false,
  "is_meta": false,
  "category": null,
  "secure_media_embed": {},
  "link_flair_text": "Hardware Help",
  "can_mod_post": false,
  "score": 0,
  "approved_by": null,
  "is_created_from_ads_ui": false,
  "author_premium": false,
  "thumbnail": "https://b.thumbs.redditmedia.com/GAt68Id7X5Y3FGbvHjFPPFabnKyq-xSHDVwZT9rZ90g.jpg",
  "edited": false,
  "author_flair_css_class": null,
  "author_flair_richtext": [],
  "gildings": {},
  "post_hint": "self",
  "content_categories": null,
  "is_self": true,
  "subreddit_type": "public",
  "created": 1739102574.0,
  "link_flair_type": "richtext",
  "wls": 6,
  "removed_by_category": null,
  "banned_by": null,
  "author_flair_type": "text",
  "domain": "self.arduino",
  "allow_live_comments": false,
  "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;I hope this is the right flair(can&amp;#39;t tell)&lt;/p&gt;\n\n&lt;p&gt;Hello. I am currently working on a Prop for a Costume, the prop has to display lights, a display, and play audio on a button press.(it&amp;#39;s a Blaster from Star Wars).&lt;/p&gt;\n\n&lt;p&gt;The lights and Display part is solved via an SSD1306 OLED and a set of WS2812/Neopixels.&lt;/p&gt;\n\n&lt;p&gt;My current progress is incorporating the sound.&lt;/p&gt;\n\n&lt;p&gt;I am currently using a (china clone I am pretty sure) DFplayerMini for this. &lt;/p&gt;\n\n&lt;p&gt;My problem is that there is a very noticeable delay between the press of the button and the sound playing(around 800ms) which makes it unusable for the intended purpose. currently, I am waiting after asking it to play till the busy pin reports back, which USUALLY works.&lt;/p&gt;\n\n&lt;p&gt;i am using a FAT32 formated 64gb class10 UHS1 SD card from Sandisk.&lt;/p&gt;\n\n&lt;p&gt;My second problem involves the sounds themself. Namely, because the DF player doesn&amp;#39;t support Polymorphic sound during &amp;quot;rapid fire&amp;quot; the Sound file is cut off, which wouldn&amp;#39;t be as big of a problem IF the start delay wasn&amp;#39;t so big that under normal circumstances the AudioFile didn&amp;#39;t even yet start to play when the next shot would be fired(the current fire rate is around 480rpm but I would be willing to go lower, but with the current delay the fire rate would be close to 60 which is less then I ideally would want) currently the Flashing continues while the sound plays once. and then restarts.&lt;/p&gt;\n\n&lt;p&gt;I have 2 more DFplayerminis, and I would be willing to add them to them together but with the current lag that would not help a lot. &lt;/p&gt;\n\n&lt;p&gt;The library I am using is &amp;lt;BLTroniX\\_Mini\\_Mp3.h&amp;gt; which was from this &lt;a href=\"https://github.com/PropTroniX/E-11-Blaster-Electronics-V1.0\"&gt;Github&lt;/a&gt; project that I found when searching for a solution (and coincidentally was very similar to my plan already anyway). I also tried the default library for The DFplayer as well as the &lt;a href=\"https://github.com/PowerBroker2/DFPlayerMini_Fast\"&gt;DFplayerMini_Fast&lt;/a&gt; library, to no (reasonable) effect&lt;/p&gt;\n\n&lt;p&gt;So I have essentially 2 questions, &lt;/p&gt;\n\n&lt;p&gt;a) are genuine DFplayerMinis better in the delay department? and B) what would be a different alternative to my current problem, alternative boards, and their price points essentially.&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=\"https://preview.redd.it/tkv0vl5kq3ie1.png?width=885&amp;amp;format=png&amp;amp;auto=webp&amp;amp;s=d99533f7c96927531700b9e23caedbb045ecd9f1\"&gt;The circuit board., the SSD1306 is a 128x32 varianta in my case, but Wokwi dosnt have that module.&lt;/a&gt;&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;#include &amp;quot;SSD1306Ascii.h&amp;quot;\n#include &amp;quot;SSD1306AsciiWire.h&amp;quot;\n#include &amp;lt;Wire.h&amp;gt;\n#include &amp;lt;Adafruit_NeoPixel.h&amp;gt;\n#include &amp;quot;SoftwareSerial.h&amp;quot;\n#include &amp;lt;BLTroniX_Mini_Mp3.h&amp;gt;\n\n// OLED and NeoPixel settings\n#define I2C_ADDRESS 0x3C  // OLED I2C address\n#define PIN_NEO_PIXEL 5   // NeoPixel control pin\n#define NUM_PIXELS 20     // Number of NeoPixels in the strip\n#define NUM_FIRE_PIXELS 1\n\n\n// Neopixel colors\n#define Red 0 \n#define Blue 30\n#define Green 15\n\n// Pin definitions\n#define FIRE_PIN 9       \n#define BUTTON_PIN 4     \n#define MAG_PIN 3        \n#define RESET_BUTTON_PIN 6 \n#define MP3_Busy 2\nSoftwareSerial mySoftwareSerial(10, 11); \n\n// Create NeoPixel and OLED objects\nAdafruit_NeoPixel NeoPixel(NUM_PIXELS, PIN_NEO_PIXEL, NEO_GRB + NEO_KHZ800);\nAdafruit_NeoPixel FirePixel(NUM_FIRE_PIXELS, FIRE_PIN, NEO_GRB + NEO_KHZ800);\nSSD1306AsciiWire oled;\n\n// Ammo-related variables\nint ammo = 600;        \nint currentMag = 60;    \nbool reloaded = false;  \nint oldLevel = -1;      \n\n// Timing variables\nunsigned long lastFireTime = 0;    \nconst unsigned long fireRate = 125; \n\n\n\n\nvoid setup() {\n  Wire.begin();\n  Wire.setClock(400000);\n  oled.begin(&amp;amp;Adafruit128x64, I2C_ADDRESS);\n  oled.setFont(lcdnums14x24);\n  oled.set2X();\n\n  mySoftwareSerial.begin(9600);\n  Serial.begin(9600);\n  mp3_set_serial(mySoftwareSerial);\n  mp3_reset();\n  delay(300);\n  mp3_set_volume(10);\n\n  oled.clear();\n  oled.setCursor(20, 1);\n  oled.println(ammo);\n\n  pinMode(BUTTON_PIN, INPUT_PULLUP);\n  pinMode(MAG_PIN, INPUT_PULLUP);\n  pinMode(FIRE_PIN, OUTPUT);\n  pinMode(RESET_BUTTON_PIN, INPUT_PULLUP);\n  pinMode(MP3_Busy, INPUT);\n\n  NeoPixel.begin();\n  NeoPixel.show();\n\n  for (int pixel = 0; pixel &amp;lt; NUM_PIXELS; pixel++) {\n    NeoPixel.setPixelColor(NUM_PIXELS - pixel - 1, NeoPixel.Color(Red, Green, Blue));\n    NeoPixel.show();\n    delay(30);\n  }\n}\n\nvoid loop() {\n  int buttonState = digitalRead(BUTTON_PIN);\n  int magState = digitalRead(MAG_PIN);\n  int resetButtonState = digitalRead(RESET_BUTTON_PIN);\n\n  if (magState == LOW) {\n    reloaded = true;\n  } else if (magState == HIGH &amp;amp;&amp;amp; reloaded) {\n    reloadMag();\n  }\n\n  if (buttonState == LOW &amp;amp;&amp;amp; !reloaded &amp;amp;&amp;amp; (millis() - lastFireTime &amp;gt;= fireRate)) {\n    fire();\n  }\n\n if (buttonState == HIGH &amp;amp;&amp;amp; digitalRead(MP3_Busy) == LOW) {\n    delay(50);\n   // mp3_stop();\n  }\n\n  if (resetButtonState == LOW) {\n    resetAmmo();\n  }\n}\n\nvoid resetAmmo() {\n  ammo = 600;\n  reloaded = true;\n\n  for (int i = 0; i &amp;lt; 6; i++) {\n    oled.setCursor(20, 1);\n    oled.print(ammo);\n    delay(200);\n    oled.clear();\n    delay(200);\n  }\n\n  oled.setCursor(20, 1);\n  oled.print(ammo);\n  reloadMag();\n}\n\nvoid reloadMag() {\n  currentMag = (ammo &amp;gt;= 60) ? 60 : ammo;\n\n\n  for (int pixel = 0; pixel &amp;lt; (currentMag + 2) / 3; pixel++) {\n    NeoPixel.setPixelColor(NUM_PIXELS - pixel - 1, NeoPixel.Color(Red, Green, Blue));\n    NeoPixel.show();\n    delay(50);\n  }\n\n  oldLevel = -1;\n  reloaded = false;\n}\nvoid fire() {\n    if (ammo == 0) {\n        displayEmptyAmmo();\n        return;\n    }\n\n    unsigned long currentMillis = millis();\n\n    // Check if we can fire based on the fire rate\n    if (currentMillis - lastFireTime &amp;lt; fireRate) {\n        return;\n    }\n\n    lastFireTime = currentMillis; // Update last fire time\n\n    if (currentMag &amp;gt; 0 &amp;amp;&amp;amp; digitalRead(MAG_PIN) == HIGH) {\n        // Play MP3 sound if not already playing\n        if (digitalRead(MP3_Busy) == HIGH) {\n            mp3_play(1);\n            while (digitalRead(MP3_Busy) == HIGH) {}  // Wait for it to start\n        }\n\n        // Muzzle flash\n        FirePixel.setPixelColor(0, FirePixel.Color(Red, Green, Blue));\n        FirePixel.show();\n        delay(80); // Flash duration\n        FirePixel.setPixelColor(0, FirePixel.Color(0, 0, 0)); \n        FirePixel.show();\n\n        // Reduce ammo count\n        ammo--;\n        currentMag--;\n\n        //Stop MP3 if mag is empty**\n        if (currentMag == 0) {\n            mp3_stop();\n        }\n\n        // Update display and NeoPixels\n        updateOled();\n        updateNeoPixel();\n    }\n}\n\nvoid displayEmptyAmmo() {\n  for (int i = 0; i &amp;lt; 2; i++) {\n    oled.clear();\n    delay(200);\n    oled.setCursor(20, 1);\n    oled.print(&amp;quot;000&amp;quot;);\n    delay(200);\n  }\n}\n\nvoid updateOled() {\n  oled.setCursor(20, 1);\n  if (ammo &amp;lt; 10) {\n    oled.print(&amp;quot;00&amp;quot;);\n  } else if (ammo &amp;lt; 100) {\n    oled.print(&amp;quot;0&amp;quot;);\n  }\n  oled.print(ammo);\n}\n\nvoid updateNeoPixel() {\n  int ledLevel = (currentMag + 2) / 3;\n\n  if (oldLevel == ledLevel) return;\n\n  for (int pixel = 0; pixel &amp;lt; NUM_PIXELS; pixel++) {\n    if (pixel &amp;lt; NUM_PIXELS - ledLevel) {\n      NeoPixel.setPixelColor(pixel, NeoPixel.Color(0, 0, 0));\n    } else {\n      NeoPixel.setPixelColor(pixel, NeoPixel.Color(Red, Green, Blue));\n    }\n  }\n  NeoPixel.show();\n\n  if (ammo == 0) {\n    for (int pixel = 0; pixel &amp;lt; NUM_PIXELS; pixel++) {\n      NeoPixel.setPixelColor(NUM_PIXELS - pixel - 1, NeoPixel.Color(56, 0, 0));\n      NeoPixel.show();\n      delay(50);\n    }\n  }\n\n  oldLevel = ledLevel;\n}\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;",
  "likes": null,
  "suggested_sort": "confidence",
  "banned_at_utc": null,
  "view_count": null,
  "archived": false,
  "no_follow": true,
  "is_crosspostable": false,
  "pinned": false,
  "over_18": false,
  "preview": {
    "images": [
      {
        "source": {
          "url": "https://external-preview.redd.it/oTNATjgDuEw-ZPCDGxEcJhKwuACwftxxdXH6zlJVq7c.jpg?auto=webp&amp;s=9a9858f7c606429087321cfda86d364c142f5e09",
          "width": 1280,
          "height": 640
        },
        "resolutions": [
          {
            "url": "https://external-preview.redd.it/oTNATjgDuEw-ZPCDGxEcJhKwuACwftxxdXH6zlJVq7c.jpg?width=108&amp;crop=smart&amp;auto=webp&amp;s=788e777fc60d3790fa15237e8a9c34302ef7a533",
            "width": 108,
            "height": 54
          },
          {
            "url": "https://external-preview.redd.it/oTNATjgDuEw-ZPCDGxEcJhKwuACwftxxdXH6zlJVq7c.jpg?width=216&amp;crop=smart&amp;auto=webp&amp;s=d87396b718e15103ad63844aa3c43a3d5f1239e4",
            "width": 216,
            "height": 108
          },
          {
            "url": "https://external-preview.redd.it/oTNATjgDuEw-ZPCDGxEcJhKwuACwftxxdXH6zlJVq7c.jpg?width=320&amp;crop=smart&amp;auto=webp&amp;s=8d8b330a405bcee1e070ba37b2ff2f953b55d241",
            "width": 320,
            "height": 160
          },
          {
            "url": "https://external-preview.redd.it/oTNATjgDuEw-ZPCDGxEcJhKwuACwftxxdXH6zlJVq7c.jpg?width=640&amp;crop=smart&amp;auto=webp&amp;s=2211cfe18b9fbd8059ade5717e2115e8206ecc9b",
            "width": 640,
            "height": 320
          },
          {
            "url": "https://external-preview.redd.it/oTNATjgDuEw-ZPCDGxEcJhKwuACwftxxdXH6zlJVq7c.jpg?width=960&amp;crop=smart&amp;auto=webp&amp;s=328dae6f98bc9ecade8106e42b099d5ad5b9cb83",
            "width": 960,
            "height": 480
          },
          {
            "url": "https://external-preview.redd.it/oTNATjgDuEw-ZPCDGxEcJhKwuACwftxxdXH6zlJVq7c.jpg?width=1080&amp;crop=smart&amp;auto=webp&amp;s=3552dba792969ad76ca1f8ae8d4c88b3b37409f3",
            "width": 1080,
            "height": 540
          }
        ],
        "variants": {},
        "id": "AzBiJoX8T3UOfQIhUxfohjDSgeKNSNJvK71PXoOt3Jw"
      }
    ],
    "enabled": false
  },
  "all_awardings": [],
  "awarders": [],
  "media_only": false,
  "link_flair_template_id": "95279390-51ce-11e9-887b-0e6f64f4557a",
  "can_gild": false,
  "spoiler": false,
  "locked": false,
  "author_flair_text": null,
  "treatment_tags": [],
  "visited": false,
  "removed_by": null,
  "mod_note": null,
  "distinguished": null,
  "subreddit_id": "t5_2qknj",
  "author_is_blocked": false,
  "mod_reason_by": null,
  "num_reports": null,
  "removal_reason": null,
  "link_flair_background_color": "#ffbb30",
  "id": "1ild9s0",
  "is_robot_indexable": true,
  "report_reasons": null,
  "author": "Interesting-Injury87",
  "discussion_type": null,
  "num_comments": 4,
  "send_replies": true,
  "contest_mode": false,
  "mod_reports": [],
  "author_patreon_flair": false,
  "author_flair_text_color": null,
  "permalink": "/r/arduino/comments/1ild9s0/require_help_for_audioplayback_for_a_costume_prop/",
  "stickied": false,
  "url": "https://www.reddit.com/r/arduino/comments/1ild9s0/require_help_for_audioplayback_for_a_costume_prop/",
  "subreddit_subscribers": 691380,
  "created_utc": 1739102574.0,
  "num_crossposts": 0,
  "media": null,
  "is_video": false
}