{
  "approved_at_utc": null,
  "subreddit": "ripred",
  "selftext": "There has been a lot of interest in the mcu subs lately in creating chess boards using Arduino's or other microcontrollers. A lot of the approaches work mainly with the construction of the board itself and representing the pieces on the board using LEDs etc. But very few projects have attempted to create the chess engine itself using a microprocessor.\n\nThis is the first post of a series that will develop a complete chess engine for the Arduino platform. I will make every attempt to see if it can be done using an Uno or Nano but we'll see. This isn't my first chess engine so hopefully the project can benefit from some of the things I've tried in the past.\n\nI really, REALLY hope there is interest in learning about building out the software side of an engine and how it can be approached. This engine will use [the Minimax algorithm with alpha/beta pruning](https://en.wikipedia.org/wiki/Minimax) and will support ply depth searching and constraints, time limits, quiescent ply searches, and many many other features.\n\nI hope with each to create the next layer of support for the engine along with new concepts and I  hope there are a lot comments and questions about the code and what it does and why it does it and why it does it a certain way.\n\n[The first release is here](https://github.com/ripred/MicroChess).\n\nThis whole project will be an exercise in data structures and algorithms. So if that stuff gave you nightmares in college hopefully the discussions in these posts and comments will help lol. A lot of work has gone into trying to get the memory usage and footprints down to an absolute minimum.\n\nThe three most costly data structures we will be:\n\n* to contain a piece, its type, side, check state, moved state, and promotion state\n* to represent a board layout\n* to represent a move from one spot to another along with the value of the move\n\nThe size of these 3 three structures will determine how well the game can play on a Nano or an Uno. I have no doubt that *\\*a\\** version of a playable game can be fit but how many moves ahead it can examine is still to be determined.\n\nThe size of those structures is so important that I initially created a version where each piece would occupy 1 byte, so the entire board was represented by a 64 byte array which is not bad.\n\nBut each piece actually takes up 6 bits, not 1 byte. So that meant that there were 128 bits or 16 bytes wasted. So I rewrote the entire board class to only occupy 48 bytes. You can see the two versions in the code and I really hope there are questions or comments. update: Thanks to u/triffid_hunter it's already smaller.\n\nThis first release can simply hold the state of any board and display it to a Serial port.\n\nSo let me know if your want to see more in this series posted here and any comments or questions you might have.\n\n     R  N  B  Q  K  B  N  R \n     P  P  P  P  P  P  P  P \n     .  *  .  *  .  *  .  * \n     *  .  *  .  *  .  *  . \n     .  *  .  *  .  *  .  * \n     *  .  *  .  *  .  *  . \n     p  p  p  p  p  p  p  p \n     r  n  b  q  k  b  n  r \n\nAll the Best!\n\n`ripred`",
  "author_fullname": "t2_adfkq",
  "saved": false,
  "mod_reason_title": null,
  "gilded": 0,
  "clicked": false,
  "title": "So, You Want To Build A Chess Engine?",
  "link_flair_richtext": [
    {
      "e": "text",
      "t": "Software"
    }
  ],
  "subreddit_name_prefixed": "r/ripred",
  "hidden": false,
  "pwls": null,
  "link_flair_css_class": "",
  "downs": 0,
  "thumbnail_height": null,
  "top_awarded_type": null,
  "hide_score": false,
  "name": "t3_11q65n8",
  "quarantine": false,
  "link_flair_text_color": "light",
  "upvote_ratio": 1.0,
  "author_flair_background_color": "transparent",
  "subreddit_type": "public",
  "ups": 2,
  "total_awards_received": 0,
  "media_embed": {},
  "thumbnail_width": null,
  "author_flair_template_id": "9fa2ceaa-053c-11ed-bb97-124dff5ea4b4",
  "is_original_content": false,
  "user_reports": [],
  "secure_media": null,
  "is_reddit_media_domain": false,
  "is_meta": false,
  "category": null,
  "secure_media_embed": {},
  "link_flair_text": "Software",
  "can_mod_post": false,
  "score": 2,
  "approved_by": null,
  "is_created_from_ads_ui": false,
  "author_premium": false,
  "thumbnail": "self",
  "edited": false,
  "author_flair_css_class": null,
  "author_flair_richtext": [
    {
      "a": ":snoo_facepalm:",
      "e": "emoji",
      "u": "https://emoji.redditmedia.com/wzxf63qpaezz_t5_3nqvj/snoo_facepalm"
    }
  ],
  "gildings": {},
  "content_categories": null,
  "is_self": true,
  "mod_note": null,
  "created": 1678703739.0,
  "link_flair_type": "richtext",
  "wls": null,
  "removed_by_category": null,
  "banned_by": null,
  "author_flair_type": "richtext",
  "domain": "self.ripred",
  "allow_live_comments": false,
  "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;There has been a lot of interest in the mcu subs lately in creating chess boards using Arduino&amp;#39;s or other microcontrollers. A lot of the approaches work mainly with the construction of the board itself and representing the pieces on the board using LEDs etc. But very few projects have attempted to create the chess engine itself using a microprocessor.&lt;/p&gt;\n\n&lt;p&gt;This is the first post of a series that will develop a complete chess engine for the Arduino platform. I will make every attempt to see if it can be done using an Uno or Nano but we&amp;#39;ll see. This isn&amp;#39;t my first chess engine so hopefully the project can benefit from some of the things I&amp;#39;ve tried in the past.&lt;/p&gt;\n\n&lt;p&gt;I really, REALLY hope there is interest in learning about building out the software side of an engine and how it can be approached. This engine will use &lt;a href=\"https://en.wikipedia.org/wiki/Minimax\"&gt;the Minimax algorithm with alpha/beta pruning&lt;/a&gt; and will support ply depth searching and constraints, time limits, quiescent ply searches, and many many other features.&lt;/p&gt;\n\n&lt;p&gt;I hope with each to create the next layer of support for the engine along with new concepts and I  hope there are a lot comments and questions about the code and what it does and why it does it and why it does it a certain way.&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=\"https://github.com/ripred/MicroChess\"&gt;The first release is here&lt;/a&gt;.&lt;/p&gt;\n\n&lt;p&gt;This whole project will be an exercise in data structures and algorithms. So if that stuff gave you nightmares in college hopefully the discussions in these posts and comments will help lol. A lot of work has gone into trying to get the memory usage and footprints down to an absolute minimum.&lt;/p&gt;\n\n&lt;p&gt;The three most costly data structures we will be:&lt;/p&gt;\n\n&lt;ul&gt;\n&lt;li&gt;to contain a piece, its type, side, check state, moved state, and promotion state&lt;/li&gt;\n&lt;li&gt;to represent a board layout&lt;/li&gt;\n&lt;li&gt;to represent a move from one spot to another along with the value of the move&lt;/li&gt;\n&lt;/ul&gt;\n\n&lt;p&gt;The size of these 3 three structures will determine how well the game can play on a Nano or an Uno. I have no doubt that &lt;em&gt;\\&lt;/em&gt;a** version of a playable game can be fit but how many moves ahead it can examine is still to be determined.&lt;/p&gt;\n\n&lt;p&gt;The size of those structures is so important that I initially created a version where each piece would occupy 1 byte, so the entire board was represented by a 64 byte array which is not bad.&lt;/p&gt;\n\n&lt;p&gt;But each piece actually takes up 6 bits, not 1 byte. So that meant that there were 128 bits or 16 bytes wasted. So I rewrote the entire board class to only occupy 48 bytes. You can see the two versions in the code and I really hope there are questions or comments. update: Thanks to &lt;a href=\"/u/triffid_hunter\"&gt;u/triffid_hunter&lt;/a&gt; it&amp;#39;s already smaller.&lt;/p&gt;\n\n&lt;p&gt;This first release can simply hold the state of any board and display it to a Serial port.&lt;/p&gt;\n\n&lt;p&gt;So let me know if your want to see more in this series posted here and any comments or questions you might have.&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt; R  N  B  Q  K  B  N  R \n P  P  P  P  P  P  P  P \n .  *  .  *  .  *  .  * \n *  .  *  .  *  .  *  . \n .  *  .  *  .  *  .  * \n *  .  *  .  *  .  *  . \n p  p  p  p  p  p  p  p \n r  n  b  q  k  b  n  r \n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;All the Best!&lt;/p&gt;\n\n&lt;p&gt;&lt;code&gt;ripred&lt;/code&gt;&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;",
  "likes": null,
  "suggested_sort": null,
  "banned_at_utc": null,
  "view_count": null,
  "archived": false,
  "no_follow": false,
  "is_crosspostable": false,
  "pinned": false,
  "over_18": false,
  "all_awardings": [],
  "awarders": [],
  "media_only": false,
  "link_flair_template_id": "e4968922-053a-11ed-93b2-52601415811f",
  "can_gild": false,
  "spoiler": false,
  "locked": false,
  "author_flair_text": ":snoo_facepalm:",
  "treatment_tags": [],
  "visited": false,
  "removed_by": null,
  "num_reports": null,
  "distinguished": null,
  "subreddit_id": "t5_6as6rv",
  "author_is_blocked": false,
  "mod_reason_by": null,
  "removal_reason": null,
  "link_flair_background_color": "#008e00",
  "id": "11q65n8",
  "is_robot_indexable": true,
  "report_reasons": null,
  "author": "ripred3",
  "discussion_type": null,
  "num_comments": 0,
  "send_replies": true,
  "contest_mode": false,
  "mod_reports": [],
  "author_patreon_flair": false,
  "author_flair_text_color": "dark",
  "permalink": "/r/ripred/comments/11q65n8/so_you_want_to_build_a_chess_engine/",
  "stickied": false,
  "url": "https://www.reddit.com/r/ripred/comments/11q65n8/so_you_want_to_build_a_chess_engine/",
  "subreddit_subscribers": 43,
  "created_utc": 1678703739.0,
  "num_crossposts": 0,
  "media": null,
  "is_video": false
}