{
  "approved_at_utc": null,
  "subreddit": "ripred",
  "selftext": "",
  "user_reports": [],
  "saved": false,
  "mod_reason_title": null,
  "gilded": 0,
  "clicked": false,
  "title": "Nano controlled Wheel-O",
  "link_flair_richtext": [
    {
      "e": "text",
      "t": "Project"
    }
  ],
  "subreddit_name_prefixed": "r/ripred",
  "hidden": false,
  "pwls": null,
  "link_flair_css_class": "",
  "downs": 0,
  "thumbnail_height": 73,
  "top_awarded_type": null,
  "hide_score": false,
  "name": "t3_18m1jf7",
  "quarantine": false,
  "link_flair_text_color": "light",
  "upvote_ratio": 1.0,
  "author_flair_background_color": "transparent",
  "subreddit_type": "public",
  "ups": 1,
  "total_awards_received": 0,
  "media_embed": {},
  "thumbnail_width": 140,
  "author_flair_template_id": "9fa2ceaa-053c-11ed-bb97-124dff5ea4b4",
  "is_original_content": false,
  "author_fullname": "t2_adfkq",
  "secure_media": null,
  "is_reddit_media_domain": false,
  "is_meta": false,
  "category": null,
  "secure_media_embed": {},
  "link_flair_text": "Project",
  "can_mod_post": false,
  "score": 1,
  "approved_by": null,
  "is_created_from_ads_ui": false,
  "author_premium": false,
  "thumbnail": "https://b.thumbs.redditmedia.com/afjpiRSNSjBHWlUbE_uE9VKGGliu0NY__9Snb9OXSOA.jpg",
  "edited": false,
  "author_flair_css_class": null,
  "author_flair_richtext": [
    {
      "a": ":snoo_facepalm:",
      "e": "emoji",
      "u": "https://emoji.redditmedia.com/wzxf63qpaezz_t5_3nqvj/snoo_facepalm"
    }
  ],
  "gildings": {},
  "content_categories": null,
  "is_self": false,
  "mod_note": null,
  "crosspost_parent_list": [
    {
      "approved_at_utc": null,
      "subreddit": "arduino",
      "selftext": "&amp;#x200B;\n\n[Nano controlled Wheel-O](https://preview.redd.it/ozkj1o2jfv6c1.png?width=2540&amp;format=png&amp;auto=webp&amp;s=fcb1aee9daa4ad42adb06dd394c54a1eb5e14c7c)\n\nI have to admit this turned out to take a lot longer than I expected it to. \"How hard can it be? Just use a servo to control it and...\" ....yeah. That was four hours ago. \ud83d\ude0f Everything about this took longer than I expected it to. The code is at the end of the post but other than the general concept it won't work for anyone right out of the box. Every value had to be fine tuned and changing anything on it meant every other number had to be re-tuned. Oh well it's finally not sitting on a shelf as one of my \"I'll try that someday\" projects! One down, 42 to go....\n\n[Nano controlled Wheel-O](https://reddit.com/link/18kjfdr/video/k45hv19cfv6c1/player)\n\nupdate: Here's the updated class-based improvement\n\n    /*\n     * @file Wheeluino.ino\n     * @brief An Arduino controlled Wheel-O.\n     * @author Trent M Wyatt\n     * @date 2023-12-19\n     * @version 1.0\n     */\n    \n    #include &lt;Arduino.h&gt;\n    #include &lt;Servo.h&gt;\n    \n    #define SERVOPIN 3\n    #define RESTART_MS 30000UL\n    \n    /**\n     * @struct Wheeluino\n     * @brief Structure representing the Wheel-O and its control.\n     */\n    class Wheeluino {\n        double const slow = 11.0;           ///&lt; Slow speed constant.\n        double const fast = 6.6;            ///&lt; Fast speed constant.\n        double const pause_min = 23.0;      ///&lt; Minimum pause duration constant.\n        double const pause_factor = 0.47;   ///&lt; Pause factor constant.\n        double const speed_factor = 0.94;   ///&lt; Speed factor constant.\n        int const pos_max = 90;             ///&lt; Maximum position constant.\n        int const pos_min = 20;             ///&lt; Minimum position constant.\n    \n        Servo servo;    ///&lt; Servo motor object.\n    \n        int pin;        ///&lt; Pin to which the servo is connected.\n    \n        double speed;   ///&lt; Current speed of the Wheel-O.\n    \n        double pause;   ///&lt; Pause duration at each end.\n    \n        int pos;        ///&lt; Current position of the servo.\n    \n    public:\n    \n        /**\n         * @brief Constructor for the Wheeluino structure.\n         * @param _pin The pin to which the servo is connected.\n         */\n        Wheeluino(int const _pin) :\n            pin(_pin),\n            speed(slow),\n            pause(90.0),\n            pos(((pos_max - pos_min) / 2) + pos_min)\n        {\n        }\n    \n        /**\n         * @brief Initializes the Wheeluino by attaching the servo and starting over.\n         */\n        void begin() {\n            servo.attach(pin);\n            start_over();\n        }\n    \n        /**\n         * @brief Stops the Wheeluino by detaching the servo and settling down.\n         */\n        void end() {\n            servo.detach();\n            settle_down();\n        }\n    \n        /**\n         * @brief Raises the end of the Wheel-O until it reaches the maximum position.\n         */\n        void raise() {\n            while (pos &lt; pos_max) {\n                pos++;\n                servo.write(pos);\n                delay(speed);\n            }\n        }\n    \n        /**\n         * @brief Lowers the end of the Wheel-O until it reaches the minimum position.\n         */\n        void lower() {\n            while (pos &gt; pos_min) {\n                pos--;\n                servo.write(pos);\n                delay(speed);\n            }\n        }\n    \n        /**\n         * @brief Points the Wheel-O down and waits for it to settle.\n         */\n        void settle_down() {\n            pos = pos_min;\n            servo.write(pos);\n            delay(19000);\n        }\n    \n        /**\n         * @brief Speeds up the Wheel-O from a stopped position.\n         */\n        void speed_up() {\n            pause = 90.0;\n            speed = slow;\n    \n            while (speed &gt; fast) {\n                speed *= speed_factor;\n    \n                raise();\n                delay(pause * speed);\n                pause *= (pause &gt; pause_min) ? pause_factor : 1.0;\n    \n                lower();\n                delay(pause * speed);\n                pause *= (pause &gt; pause_min) ? pause_factor : 1.0;\n            }\n        }\n    \n        /**\n         * @brief Stops and restarts the Wheel-O.\n         */\n        void start_over() {\n            settle_down();\n            speed_up();\n        }\n    \n        /**\n         * @brief Executes a run sequence for the Wheel-O.\n         */\n        void run() {\n            raise();\n            delay(pause * speed);\n    \n            lower();\n            delay(pause * speed);\n        }\n    };\n    \n    Wheeluino wheelo(SERVOPIN);\n    uint32_t start_time;\n    \n    /**\n     * @brief Arduino setup function.\n     */\n    void setup() {\n        Serial.begin(115200);\n    \n        wheelo.begin();\n        wheelo.start_over();\n    \n        start_time = millis();\n    }\n    \n    /**\n     * @brief Arduino main loop function.\n     */\n    void loop() {\n        wheelo.run();\n    \n        if (millis() - start_time &gt;= RESTART_MS) {\n            wheelo.start_over();\n            start_time = millis();\n        }\n    }",
      "author_fullname": "t2_adfkq",
      "saved": false,
      "mod_reason_title": null,
      "gilded": 0,
      "clicked": false,
      "title": "Nano controlled Wheel-O",
      "link_flair_richtext": [
        {
          "e": "text",
          "t": "Look what I made!"
        }
      ],
      "subreddit_name_prefixed": "r/arduino",
      "hidden": false,
      "pwls": 6,
      "link_flair_css_class": "",
      "downs": 0,
      "thumbnail_height": 73,
      "top_awarded_type": null,
      "hide_score": false,
      "media_metadata": {
        "k45hv19cfv6c1": {
          "status": "valid",
          "e": "RedditVideo",
          "dashUrl": "https://v.redd.it/link/18kjfdr/asset/k45hv19cfv6c1/DASHPlaylist.mpd?a=1741715549%2CZTU3NjMxYWQ0Yjc3ZGUzYjJmZjRlNjFhZTg5ODkyNjA4NjQ3NGIzNzhmNDY3OWMxYWFkYjc3MWFkYmI4NDllMg%3D%3D&amp;v=1&amp;f=sd",
          "x": 640,
          "y": 360,
          "hlsUrl": "https://v.redd.it/link/18kjfdr/asset/k45hv19cfv6c1/HLSPlaylist.m3u8?a=1741715549%2CZjRjY2QwMzgxYzg0NmQ5NWI2ZjZkMGJjNGMwYTY0YWM4NTM5ZDM1NmMzMzFmZmFiZDFkOGYwMTQ4Mjk0MmY5Zg%3D%3D&amp;v=1&amp;f=sd",
          "id": "k45hv19cfv6c1",
          "isGif": false
        },
        "ozkj1o2jfv6c1": {
          "status": "valid",
          "e": "Image",
          "m": "image/png",
          "p": [
            {
              "y": 56,
              "x": 108,
              "u": "https://preview.redd.it/ozkj1o2jfv6c1.png?width=108&amp;crop=smart&amp;auto=webp&amp;s=3ab80a239e8c894a62a308dd015e799ecab0002f"
            },
            {
              "y": 113,
              "x": 216,
              "u": "https://preview.redd.it/ozkj1o2jfv6c1.png?width=216&amp;crop=smart&amp;auto=webp&amp;s=72e06412860ea64ddda1aa9c11b7d36b03fe5b2a"
            },
            {
              "y": 168,
              "x": 320,
              "u": "https://preview.redd.it/ozkj1o2jfv6c1.png?width=320&amp;crop=smart&amp;auto=webp&amp;s=e7d7d90d87900a70c2aa0cb0b14cae750bd2a056"
            },
            {
              "y": 336,
              "x": 640,
              "u": "https://preview.redd.it/ozkj1o2jfv6c1.png?width=640&amp;crop=smart&amp;auto=webp&amp;s=448493213aba2a266f10ca2103b8145ec6a4f55c"
            },
            {
              "y": 504,
              "x": 960,
              "u": "https://preview.redd.it/ozkj1o2jfv6c1.png?width=960&amp;crop=smart&amp;auto=webp&amp;s=1d40a0e5a1c06a932c7fcbf96f917c41a343817e"
            },
            {
              "y": 568,
              "x": 1080,
              "u": "https://preview.redd.it/ozkj1o2jfv6c1.png?width=1080&amp;crop=smart&amp;auto=webp&amp;s=5bba04b4378f6175374e1c3952ba139ebab42d8a"
            }
          ],
          "s": {
            "y": 1336,
            "x": 2540,
            "u": "https://preview.redd.it/ozkj1o2jfv6c1.png?width=2540&amp;format=png&amp;auto=webp&amp;s=fcb1aee9daa4ad42adb06dd394c54a1eb5e14c7c"
          },
          "id": "ozkj1o2jfv6c1"
        }
      },
      "name": "t3_18kjfdr",
      "quarantine": false,
      "link_flair_text_color": null,
      "upvote_ratio": 0.81,
      "author_flair_background_color": "#00a6a5",
      "subreddit_type": "public",
      "ups": 3,
      "total_awards_received": 0,
      "media_embed": {},
      "thumbnail_width": 140,
      "author_flair_template_id": "5cb3c302-0ef5-11ed-b9fd-aab9a872a9c2",
      "is_original_content": false,
      "user_reports": [],
      "secure_media": null,
      "is_reddit_media_domain": false,
      "is_meta": false,
      "category": null,
      "secure_media_embed": {},
      "link_flair_text": "Look what I made!",
      "can_mod_post": false,
      "score": 3,
      "approved_by": null,
      "is_created_from_ads_ui": false,
      "author_premium": false,
      "thumbnail": "https://b.thumbs.redditmedia.com/afjpiRSNSjBHWlUbE_uE9VKGGliu0NY__9Snb9OXSOA.jpg",
      "edited": 1702989854.0,
      "author_flair_css_class": null,
      "author_flair_richtext": [
        {
          "a": ":400K:",
          "e": "emoji",
          "u": "https://emoji.redditmedia.com/apsbyvbwmfe91_t5_2qknj/400K"
        },
        {
          "a": ":Arduino_500k:",
          "e": "emoji",
          "u": "https://emoji.redditmedia.com/o5qzzwwkvk5a1_t5_2qknj/Arduino_500k"
        },
        {
          "a": ":600K:",
          "e": "emoji",
          "u": "https://emoji.redditmedia.com/z23hxjk4hpeb1_t5_2qknj/600K"
        },
        {
          "a": ":640K:",
          "e": "emoji",
          "u": "https://emoji.redditmedia.com/g9r24xjaydqc1_t5_2qknj/640K"
        },
        {
          "e": "text",
          "t": " My other dev board is a Porsche"
        }
      ],
      "gildings": {},
      "content_categories": null,
      "is_self": true,
      "mod_note": null,
      "created": 1702826081.0,
      "link_flair_type": "richtext",
      "wls": 6,
      "removed_by_category": null,
      "banned_by": null,
      "author_flair_type": "richtext",
      "domain": "self.arduino",
      "allow_live_comments": false,
      "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;&amp;#x200B;&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=\"https://preview.redd.it/ozkj1o2jfv6c1.png?width=2540&amp;amp;format=png&amp;amp;auto=webp&amp;amp;s=fcb1aee9daa4ad42adb06dd394c54a1eb5e14c7c\"&gt;Nano controlled Wheel-O&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;I have to admit this turned out to take a lot longer than I expected it to. &amp;quot;How hard can it be? Just use a servo to control it and...&amp;quot; ....yeah. That was four hours ago. \ud83d\ude0f Everything about this took longer than I expected it to. The code is at the end of the post but other than the general concept it won&amp;#39;t work for anyone right out of the box. Every value had to be fine tuned and changing anything on it meant every other number had to be re-tuned. Oh well it&amp;#39;s finally not sitting on a shelf as one of my &amp;quot;I&amp;#39;ll try that someday&amp;quot; projects! One down, 42 to go....&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=\"https://reddit.com/link/18kjfdr/video/k45hv19cfv6c1/player\"&gt;Nano controlled Wheel-O&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;update: Here&amp;#39;s the updated class-based improvement&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;/*\n * @file Wheeluino.ino\n * @brief An Arduino controlled Wheel-O.\n * @author Trent M Wyatt\n * @date 2023-12-19\n * @version 1.0\n */\n\n#include &amp;lt;Arduino.h&amp;gt;\n#include &amp;lt;Servo.h&amp;gt;\n\n#define SERVOPIN 3\n#define RESTART_MS 30000UL\n\n/**\n * @struct Wheeluino\n * @brief Structure representing the Wheel-O and its control.\n */\nclass Wheeluino {\n    double const slow = 11.0;           ///&amp;lt; Slow speed constant.\n    double const fast = 6.6;            ///&amp;lt; Fast speed constant.\n    double const pause_min = 23.0;      ///&amp;lt; Minimum pause duration constant.\n    double const pause_factor = 0.47;   ///&amp;lt; Pause factor constant.\n    double const speed_factor = 0.94;   ///&amp;lt; Speed factor constant.\n    int const pos_max = 90;             ///&amp;lt; Maximum position constant.\n    int const pos_min = 20;             ///&amp;lt; Minimum position constant.\n\n    Servo servo;    ///&amp;lt; Servo motor object.\n\n    int pin;        ///&amp;lt; Pin to which the servo is connected.\n\n    double speed;   ///&amp;lt; Current speed of the Wheel-O.\n\n    double pause;   ///&amp;lt; Pause duration at each end.\n\n    int pos;        ///&amp;lt; Current position of the servo.\n\npublic:\n\n    /**\n     * @brief Constructor for the Wheeluino structure.\n     * @param _pin The pin to which the servo is connected.\n     */\n    Wheeluino(int const _pin) :\n        pin(_pin),\n        speed(slow),\n        pause(90.0),\n        pos(((pos_max - pos_min) / 2) + pos_min)\n    {\n    }\n\n    /**\n     * @brief Initializes the Wheeluino by attaching the servo and starting over.\n     */\n    void begin() {\n        servo.attach(pin);\n        start_over();\n    }\n\n    /**\n     * @brief Stops the Wheeluino by detaching the servo and settling down.\n     */\n    void end() {\n        servo.detach();\n        settle_down();\n    }\n\n    /**\n     * @brief Raises the end of the Wheel-O until it reaches the maximum position.\n     */\n    void raise() {\n        while (pos &amp;lt; pos_max) {\n            pos++;\n            servo.write(pos);\n            delay(speed);\n        }\n    }\n\n    /**\n     * @brief Lowers the end of the Wheel-O until it reaches the minimum position.\n     */\n    void lower() {\n        while (pos &amp;gt; pos_min) {\n            pos--;\n            servo.write(pos);\n            delay(speed);\n        }\n    }\n\n    /**\n     * @brief Points the Wheel-O down and waits for it to settle.\n     */\n    void settle_down() {\n        pos = pos_min;\n        servo.write(pos);\n        delay(19000);\n    }\n\n    /**\n     * @brief Speeds up the Wheel-O from a stopped position.\n     */\n    void speed_up() {\n        pause = 90.0;\n        speed = slow;\n\n        while (speed &amp;gt; fast) {\n            speed *= speed_factor;\n\n            raise();\n            delay(pause * speed);\n            pause *= (pause &amp;gt; pause_min) ? pause_factor : 1.0;\n\n            lower();\n            delay(pause * speed);\n            pause *= (pause &amp;gt; pause_min) ? pause_factor : 1.0;\n        }\n    }\n\n    /**\n     * @brief Stops and restarts the Wheel-O.\n     */\n    void start_over() {\n        settle_down();\n        speed_up();\n    }\n\n    /**\n     * @brief Executes a run sequence for the Wheel-O.\n     */\n    void run() {\n        raise();\n        delay(pause * speed);\n\n        lower();\n        delay(pause * speed);\n    }\n};\n\nWheeluino wheelo(SERVOPIN);\nuint32_t start_time;\n\n/**\n * @brief Arduino setup function.\n */\nvoid setup() {\n    Serial.begin(115200);\n\n    wheelo.begin();\n    wheelo.start_over();\n\n    start_time = millis();\n}\n\n/**\n * @brief Arduino main loop function.\n */\nvoid loop() {\n    wheelo.run();\n\n    if (millis() - start_time &amp;gt;= RESTART_MS) {\n        wheelo.start_over();\n        start_time = millis();\n    }\n}\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;",
      "likes": null,
      "suggested_sort": "confidence",
      "banned_at_utc": null,
      "view_count": null,
      "archived": false,
      "no_follow": false,
      "is_crosspostable": false,
      "pinned": false,
      "over_18": false,
      "all_awardings": [],
      "awarders": [],
      "media_only": false,
      "link_flair_template_id": "8a993096-51ce-11e9-84d9-0e29268ab306",
      "can_gild": false,
      "spoiler": false,
      "locked": false,
      "author_flair_text": ":400K::Arduino_500k::600K::640K: My other dev board is a Porsche",
      "treatment_tags": [],
      "visited": false,
      "removed_by": null,
      "num_reports": null,
      "distinguished": null,
      "subreddit_id": "t5_2qknj",
      "author_is_blocked": false,
      "mod_reason_by": null,
      "removal_reason": null,
      "link_flair_background_color": "#94e044",
      "id": "18kjfdr",
      "is_robot_indexable": true,
      "report_reasons": null,
      "author": "ripred3",
      "discussion_type": null,
      "num_comments": 0,
      "send_replies": true,
      "contest_mode": false,
      "mod_reports": [],
      "author_patreon_flair": false,
      "author_flair_text_color": "light",
      "permalink": "/r/arduino/comments/18kjfdr/nano_controlled_wheelo/",
      "stickied": false,
      "url": "https://www.reddit.com/r/arduino/comments/18kjfdr/nano_controlled_wheelo/",
      "subreddit_subscribers": 691390,
      "created_utc": 1702826081.0,
      "num_crossposts": 3,
      "media": null,
      "is_video": false
    }
  ],
  "created": 1702991425.0,
  "link_flair_type": "richtext",
  "wls": null,
  "removed_by_category": null,
  "banned_by": null,
  "author_flair_type": "richtext",
  "domain": "self.arduino",
  "allow_live_comments": false,
  "selftext_html": null,
  "likes": null,
  "suggested_sort": null,
  "banned_at_utc": null,
  "url_overridden_by_dest": "/r/arduino/comments/18kjfdr/nano_controlled_wheelo/",
  "view_count": null,
  "archived": false,
  "no_follow": true,
  "is_crosspostable": false,
  "pinned": false,
  "over_18": false,
  "all_awardings": [],
  "awarders": [],
  "media_only": false,
  "link_flair_template_id": "10e54cb2-a03e-11ee-82f2-8255c429eabf",
  "can_gild": false,
  "spoiler": false,
  "locked": false,
  "author_flair_text": ":snoo_facepalm:",
  "treatment_tags": [],
  "visited": false,
  "removed_by": null,
  "num_reports": null,
  "distinguished": null,
  "subreddit_id": "t5_6as6rv",
  "author_is_blocked": false,
  "mod_reason_by": null,
  "removal_reason": null,
  "link_flair_background_color": "#6767f1",
  "id": "18m1jf7",
  "is_robot_indexable": true,
  "report_reasons": null,
  "author": "ripred3",
  "discussion_type": null,
  "num_comments": 0,
  "send_replies": true,
  "contest_mode": false,
  "mod_reports": [],
  "author_patreon_flair": false,
  "crosspost_parent": "t3_18kjfdr",
  "author_flair_text_color": "dark",
  "permalink": "/r/ripred/comments/18m1jf7/nano_controlled_wheelo/",
  "stickied": false,
  "url": "/r/arduino/comments/18kjfdr/nano_controlled_wheelo/",
  "subreddit_subscribers": 43,
  "created_utc": 1702991425.0,
  "num_crossposts": 0,
  "media": null,
  "is_video": false
}