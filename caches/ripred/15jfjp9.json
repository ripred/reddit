{
  "approved_at_utc": null,
  "subreddit": "ripred",
  "selftext": "",
  "user_reports": [],
  "saved": false,
  "mod_reason_title": null,
  "gilded": 0,
  "clicked": false,
  "title": "New Arduino Profiler Library",
  "link_flair_richtext": [
    {
      "e": "text",
      "t": "Library"
    }
  ],
  "subreddit_name_prefixed": "r/ripred",
  "hidden": false,
  "pwls": null,
  "link_flair_css_class": "",
  "downs": 0,
  "thumbnail_height": null,
  "top_awarded_type": null,
  "hide_score": false,
  "name": "t3_15jfjp9",
  "quarantine": false,
  "link_flair_text_color": "light",
  "upvote_ratio": 1.0,
  "author_flair_background_color": "transparent",
  "subreddit_type": "public",
  "ups": 1,
  "total_awards_received": 0,
  "media_embed": {},
  "thumbnail_width": null,
  "author_flair_template_id": "9fa2ceaa-053c-11ed-bb97-124dff5ea4b4",
  "is_original_content": false,
  "author_fullname": "t2_adfkq",
  "secure_media": null,
  "is_reddit_media_domain": false,
  "is_meta": false,
  "category": null,
  "secure_media_embed": {},
  "link_flair_text": "Library",
  "can_mod_post": false,
  "score": 1,
  "approved_by": null,
  "is_created_from_ads_ui": false,
  "author_premium": false,
  "thumbnail": "default",
  "edited": false,
  "author_flair_css_class": null,
  "author_flair_richtext": [
    {
      "a": ":snoo_facepalm:",
      "e": "emoji",
      "u": "https://emoji.redditmedia.com/wzxf63qpaezz_t5_3nqvj/snoo_facepalm"
    }
  ],
  "gildings": {},
  "content_categories": null,
  "is_self": false,
  "mod_note": null,
  "crosspost_parent_list": [
    {
      "approved_at_utc": null,
      "subreddit": "arduino",
      "selftext": "Recently we had [a post asking how to time a section of Arduino code](https://www.reddit.com/r/arduino/comments/15fj9q9/im_trying_to_find_out_how_many_ms_this_block_of/?utm_source=share&amp;utm_medium=web2x&amp;context=3) or an entire function. I offered a code profiing (timing) solution and it seemed to get a fairly popular reponse so I wrapped the code into an Arduino Library and just submitted a pull-request to [the official Arduino Library Repository](https://www.arduinolibraries.info/libraries/smooth). It was accepted and should be available within 24 hours.\n\nThe library allows you to profile (determine the time it takes to execute) the functions in your sketches or even just a few lines of code within a larger section. The library is extremely lightweight and easy to use. The output of the timings will automatically be sent to the `Serial` output monitor but you can easily override this to point to any `Stream` compatible output device such as an external display or serial port such as `Serial1` if that is supported by your microcontroller. The Arduino Mega and the new Uno R4 series support these additional serial ports as well as some other Arduino models.\n\nThe profiler works by grabbing the current time using the `millis()` function automatically by just declaring a `profiler_t` variable so you don't need to do anything more than simply declare a variable! Everything else is taken care of for you. When the variable goes out of scope such as at the end of a function or temporary scope, the destructor for the variable automatically determines the amount of time spent behind the scenes and sends the results to the chosen serial output (`Serial` is the default but a different destination can be specified in the declaration of the variable).\n\nAdditionally you can easily disable all output from all of the uses of the profiler throughout your code by simply calling the `profiler_t::disable()` method so that you don't have to go through and comment out all of the uses of it in your code once you are finished testing and optimizing your code. If you wish you can also re-enable the output at any time by calling `profiler_t::enable()`.\n\nThe library is named [Profiler](https://github.com/ripred/Profiler) and will be available from within both versions of the Arduino IDE within 24 hours using `(ctrl/cmd) shift I` or it can be installed and used now from the repository link above. Give the repo a star if you like it. Tested on the Arduino Uno, Nano, the new Uno R4 Minima and the Uno R4 Wifi as well.\n\nAll the Best!\n\n`ripred`\n\n    /*\n     * Profiler.ino\n     * \n     * Example Arduino sketch for the Arduino Profiler library\n     * \n     */\n    #include &lt;Profiler.h&gt;\n    \n    // Example function that will be fully profiled\n    void foo() {\n        profiler_t profiler;\n        delay(1000);\n    }\n    \n    // Example function where only part of the code\n    // will be profiled using a temporary scope\n    void bar() {\n        // this code will not be profiled. yes the code is pointless heh\n        for (int i=0; i &lt; 10; i++) {\n            delay(100);\n        }\n    \n        // create a temporary scope just to contain the instantiation of a profiler_t\n        // object in order to time a few lines of code inside a larger section:\n        {\n            profiler_t timing;\n            delay(500);\n        }\n    \n        // more pointless code that will not be profiled\n        for (int i=0; i &lt; 10; i++) {\n            delay(100);\n        }\n    }\n    \n    void setup() {\n        Serial.begin(115200);\n        while (!Serial);\n    \n        foo();\n        bar();\n    }\n    \n    void loop() { }\n\noutput:\n\n    Time spent: 999\n    Time spent: 500",
      "author_fullname": "t2_adfkq",
      "saved": false,
      "mod_reason_title": null,
      "gilded": 0,
      "clicked": false,
      "title": "New Arduino Profiler Library",
      "link_flair_richtext": [
        {
          "a": ":Libraries:",
          "e": "emoji",
          "u": "https://emoji.redditmedia.com/s7x3w35qfkna1_t5_2qknj/Libraries"
        },
        {
          "e": "text",
          "t": " Libraries"
        }
      ],
      "subreddit_name_prefixed": "r/arduino",
      "hidden": false,
      "pwls": 6,
      "link_flair_css_class": "",
      "downs": 0,
      "thumbnail_height": null,
      "top_awarded_type": null,
      "hide_score": false,
      "name": "t3_15jez2l",
      "quarantine": false,
      "link_flair_text_color": "light",
      "upvote_ratio": 1.0,
      "author_flair_background_color": "#00a6a5",
      "subreddit_type": "public",
      "ups": 4,
      "total_awards_received": 0,
      "media_embed": {},
      "thumbnail_width": null,
      "author_flair_template_id": "5cb3c302-0ef5-11ed-b9fd-aab9a872a9c2",
      "is_original_content": false,
      "user_reports": [],
      "secure_media": null,
      "is_reddit_media_domain": false,
      "is_meta": false,
      "category": null,
      "secure_media_embed": {},
      "link_flair_text": ":Libraries: Libraries",
      "can_mod_post": false,
      "score": 4,
      "approved_by": null,
      "is_created_from_ads_ui": false,
      "author_premium": false,
      "thumbnail": "self",
      "edited": 1691295409.0,
      "author_flair_css_class": null,
      "author_flair_richtext": [
        {
          "a": ":400K:",
          "e": "emoji",
          "u": "https://emoji.redditmedia.com/apsbyvbwmfe91_t5_2qknj/400K"
        },
        {
          "a": ":Arduino_500k:",
          "e": "emoji",
          "u": "https://emoji.redditmedia.com/o5qzzwwkvk5a1_t5_2qknj/Arduino_500k"
        },
        {
          "a": ":600K:",
          "e": "emoji",
          "u": "https://emoji.redditmedia.com/z23hxjk4hpeb1_t5_2qknj/600K"
        },
        {
          "a": ":640K:",
          "e": "emoji",
          "u": "https://emoji.redditmedia.com/g9r24xjaydqc1_t5_2qknj/640K"
        },
        {
          "e": "text",
          "t": " My other dev board is a Porsche"
        }
      ],
      "gildings": {},
      "content_categories": null,
      "is_self": true,
      "mod_note": null,
      "created": 1691292149.0,
      "link_flair_type": "richtext",
      "wls": 6,
      "removed_by_category": null,
      "banned_by": null,
      "author_flair_type": "richtext",
      "domain": "self.arduino",
      "allow_live_comments": false,
      "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;Recently we had &lt;a href=\"https://www.reddit.com/r/arduino/comments/15fj9q9/im_trying_to_find_out_how_many_ms_this_block_of/?utm_source=share&amp;amp;utm_medium=web2x&amp;amp;context=3\"&gt;a post asking how to time a section of Arduino code&lt;/a&gt; or an entire function. I offered a code profiing (timing) solution and it seemed to get a fairly popular reponse so I wrapped the code into an Arduino Library and just submitted a pull-request to &lt;a href=\"https://www.arduinolibraries.info/libraries/smooth\"&gt;the official Arduino Library Repository&lt;/a&gt;. It was accepted and should be available within 24 hours.&lt;/p&gt;\n\n&lt;p&gt;The library allows you to profile (determine the time it takes to execute) the functions in your sketches or even just a few lines of code within a larger section. The library is extremely lightweight and easy to use. The output of the timings will automatically be sent to the &lt;code&gt;Serial&lt;/code&gt; output monitor but you can easily override this to point to any &lt;code&gt;Stream&lt;/code&gt; compatible output device such as an external display or serial port such as &lt;code&gt;Serial1&lt;/code&gt; if that is supported by your microcontroller. The Arduino Mega and the new Uno R4 series support these additional serial ports as well as some other Arduino models.&lt;/p&gt;\n\n&lt;p&gt;The profiler works by grabbing the current time using the &lt;code&gt;millis()&lt;/code&gt; function automatically by just declaring a &lt;code&gt;profiler_t&lt;/code&gt; variable so you don&amp;#39;t need to do anything more than simply declare a variable! Everything else is taken care of for you. When the variable goes out of scope such as at the end of a function or temporary scope, the destructor for the variable automatically determines the amount of time spent behind the scenes and sends the results to the chosen serial output (&lt;code&gt;Serial&lt;/code&gt; is the default but a different destination can be specified in the declaration of the variable).&lt;/p&gt;\n\n&lt;p&gt;Additionally you can easily disable all output from all of the uses of the profiler throughout your code by simply calling the &lt;code&gt;profiler_t::disable()&lt;/code&gt; method so that you don&amp;#39;t have to go through and comment out all of the uses of it in your code once you are finished testing and optimizing your code. If you wish you can also re-enable the output at any time by calling &lt;code&gt;profiler_t::enable()&lt;/code&gt;.&lt;/p&gt;\n\n&lt;p&gt;The library is named &lt;a href=\"https://github.com/ripred/Profiler\"&gt;Profiler&lt;/a&gt; and will be available from within both versions of the Arduino IDE within 24 hours using &lt;code&gt;(ctrl/cmd) shift I&lt;/code&gt; or it can be installed and used now from the repository link above. Give the repo a star if you like it. Tested on the Arduino Uno, Nano, the new Uno R4 Minima and the Uno R4 Wifi as well.&lt;/p&gt;\n\n&lt;p&gt;All the Best!&lt;/p&gt;\n\n&lt;p&gt;&lt;code&gt;ripred&lt;/code&gt;&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;/*\n * Profiler.ino\n * \n * Example Arduino sketch for the Arduino Profiler library\n * \n */\n#include &amp;lt;Profiler.h&amp;gt;\n\n// Example function that will be fully profiled\nvoid foo() {\n    profiler_t profiler;\n    delay(1000);\n}\n\n// Example function where only part of the code\n// will be profiled using a temporary scope\nvoid bar() {\n    // this code will not be profiled. yes the code is pointless heh\n    for (int i=0; i &amp;lt; 10; i++) {\n        delay(100);\n    }\n\n    // create a temporary scope just to contain the instantiation of a profiler_t\n    // object in order to time a few lines of code inside a larger section:\n    {\n        profiler_t timing;\n        delay(500);\n    }\n\n    // more pointless code that will not be profiled\n    for (int i=0; i &amp;lt; 10; i++) {\n        delay(100);\n    }\n}\n\nvoid setup() {\n    Serial.begin(115200);\n    while (!Serial);\n\n    foo();\n    bar();\n}\n\nvoid loop() { }\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;output:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;Time spent: 999\nTime spent: 500\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;",
      "likes": null,
      "suggested_sort": null,
      "banned_at_utc": null,
      "view_count": null,
      "archived": false,
      "no_follow": false,
      "is_crosspostable": false,
      "pinned": false,
      "over_18": false,
      "all_awardings": [],
      "awarders": [],
      "media_only": false,
      "link_flair_template_id": "5157e812-c1d8-11ed-aa85-8a0e0e8df8e0",
      "can_gild": false,
      "spoiler": false,
      "locked": false,
      "author_flair_text": ":400K::Arduino_500k::600K::640K: My other dev board is a Porsche",
      "treatment_tags": [],
      "visited": false,
      "removed_by": null,
      "num_reports": null,
      "distinguished": null,
      "subreddit_id": "t5_2qknj",
      "author_is_blocked": false,
      "mod_reason_by": null,
      "removal_reason": null,
      "link_flair_background_color": "#3300ee",
      "id": "15jez2l",
      "is_robot_indexable": true,
      "report_reasons": null,
      "author": "ripred3",
      "discussion_type": null,
      "num_comments": 4,
      "send_replies": true,
      "contest_mode": false,
      "mod_reports": [],
      "author_patreon_flair": false,
      "author_flair_text_color": "light",
      "permalink": "/r/arduino/comments/15jez2l/new_arduino_profiler_library/",
      "stickied": false,
      "url": "https://www.reddit.com/r/arduino/comments/15jez2l/new_arduino_profiler_library/",
      "subreddit_subscribers": 691390,
      "created_utc": 1691292149.0,
      "num_crossposts": 6,
      "media": null,
      "is_video": false
    }
  ],
  "created": 1691293947.0,
  "link_flair_type": "richtext",
  "wls": null,
  "removed_by_category": null,
  "banned_by": null,
  "author_flair_type": "richtext",
  "domain": "self.arduino",
  "allow_live_comments": false,
  "selftext_html": null,
  "likes": null,
  "suggested_sort": null,
  "banned_at_utc": null,
  "url_overridden_by_dest": "/r/arduino/comments/15jez2l/new_arduino_profiler_library/",
  "view_count": null,
  "archived": false,
  "no_follow": true,
  "is_crosspostable": false,
  "pinned": false,
  "over_18": false,
  "all_awardings": [],
  "awarders": [],
  "media_only": false,
  "link_flair_template_id": "67fe8ba6-0578-11ed-a1f0-e2a331aeaf4a",
  "can_gild": false,
  "spoiler": false,
  "locked": false,
  "author_flair_text": ":snoo_facepalm:",
  "treatment_tags": [],
  "visited": false,
  "removed_by": null,
  "num_reports": null,
  "distinguished": null,
  "subreddit_id": "t5_6as6rv",
  "author_is_blocked": false,
  "mod_reason_by": null,
  "removal_reason": null,
  "link_flair_background_color": "#cc5289",
  "id": "15jfjp9",
  "is_robot_indexable": true,
  "report_reasons": null,
  "author": "ripred3",
  "discussion_type": null,
  "num_comments": 0,
  "send_replies": true,
  "contest_mode": false,
  "mod_reports": [],
  "author_patreon_flair": false,
  "crosspost_parent": "t3_15jez2l",
  "author_flair_text_color": "dark",
  "permalink": "/r/ripred/comments/15jfjp9/new_arduino_profiler_library/",
  "stickied": false,
  "url": "/r/arduino/comments/15jez2l/new_arduino_profiler_library/",
  "subreddit_subscribers": 43,
  "created_utc": 1691293947.0,
  "num_crossposts": 0,
  "media": null,
  "is_video": false
}